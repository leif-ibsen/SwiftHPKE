{"sections":[],"metadata":{"title":"Key Management","role":"article","modules":[{"name":"SwiftHPKE"}],"roleHeading":"Article"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/KeyManagement"},"hierarchy":{"paths":[["doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE"]]},"seeAlsoSections":[{"title":"Additional Information","identifiers":["doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/SecretExport","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/CryptoKit","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Performance","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/References"],"generated":true}],"kind":"article","schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"content","content":[{"text":"","type":"heading","level":2,"anchor":""},{"text":"Create new Keys","anchor":"Create-new-Keys","type":"heading","level":3},{"inlineContent":[{"text":"Given a ","type":"text"},{"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/CipherSuite","isActive":true,"type":"reference"},{"type":"text","text":" instance it is possible to generate new "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/PublicKey"},{"text":"’s and ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/PrivateKey","isActive":true},{"type":"text","text":"’s."}],"type":"paragraph"},{"code":["import SwiftHPKE","","let suite = CipherSuite(kem: .X25519, kdf: .KDF256, aead: .CHACHAPOLY)","let (pubKey, privKey) = try suite.makeKeyPair()","","\/\/ See the key ASN1 structures","","print(pubKey)","print(privKey)"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"giving (for example):","type":"text"}]},{"syntax":"swift","code":["Sequence (2):","  Sequence (1):","    Object Identifier: 1.3.101.110","  Bit String (256): 11100111 11100111 00010111 11110101 10101000 10010101 01001010 00100010 00011010 10001001 11001011 11010001 11101101 10000101 01110101 11011111 11010110 00001101 01001110 10100100 00111011 00110100 01110000 01011000 00111111 01011011 10001010 11111010 01101000 10010011 10100001 00001101","","Sequence (3):","  Integer: 0","  Sequence (1):","    Object Identifier: 1.3.101.110","  Octet String (34): 04 20 b0 e5 94 7d f8 72 04 8f 90 79 5f d5 b7 e4 6e ca 56 18 58 30 2e 4e 79 83 d6 46 bb 42 70 2a 34 68"],"type":"codeListing"},{"level":3,"anchor":"Load-existing-Keys","type":"heading","text":"Load existing Keys"},{"type":"paragraph","inlineContent":[{"type":"text","text":"It is possible to load existing keys from their PEM encodings or DER encodings."}]},{"syntax":"swift","code":["import SwiftHPKE","","\/\/ Public key encoding - curve P384","let pubKeyPem =","\"\"\"","-----BEGIN PUBLIC KEY-----","MHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEQW\/MahMwMTFjwY95uOEdfBVC7HrQhTGGTwxiPlgDiARq","C6y6EQ1Ajkuhe4A02WOltRYQRXKytzspOR25UfgtagURAwxVFYzR9cmi6FRmvvq\/Tsigd\/dAi4FN","jniR7\/Pg","-----END PUBLIC KEY-----","\"\"\"","let pubKey = try PublicKey(pem: pubKeyPem)","","\/\/ Private key encoding - curve P384","let privKeyPem =","\"\"\"","-----BEGIN PRIVATE KEY-----","MIG\/AgEAMBAGByqGSM49AgEGBSuBBAAiBIGnMIGkAgEBBDBmpNziSYmGoWwl7apJM9ZdDBxkJqmx","MScHGXG45ZQXSv7fIuJlsSwxK76nUiiO7gigBwYFK4EEACKhZANiAARBb8xqEzAxMWPBj3m44R18","FULsetCFMYZPDGI+WAOIBGoLrLoRDUCOS6F7gDTZY6W1FhBFcrK3Oyk5HblR+C1qBREDDFUVjNH1","yaLoVGa++r9OyKB390CLgU2OeJHv8+A=","-----END PRIVATE KEY-----","\"\"\"","let privKey = try PrivateKey(pem: privKeyPem)","","\/\/ See the key ASN1 structures","","print(pubKey)","print(privKey)"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"giving:","type":"text"}]},{"code":["Sequence (2):","  Sequence (2):","    Object Identifier: 1.2.840.10045.2.1","    Object Identifier: 1.3.132.0.34","  Bit String (776): 00000100 01000001 01101111 11001100 01101010 00010011 00110000 00110001 00110001 01100011 11000001 10001111 01111001 10111000 11100001 00011101 01111100 00010101 01000010 11101100 01111010 11010000 10000101 00110001 10000110 01001111 00001100 01100010 00111110 01011000 00000011 10001000 00000100 01101010 00001011 10101100 10111010 00010001 00001101 01000000 10001110 01001011 10100001 01111011 10000000 00110100 11011001 01100011 10100101 10110101 00010110 00010000 01000101 01110010 10110010 10110111 00111011 00101001 00111001 00011101 10111001 01010001 11111000 00101101 01101010 00000101 00010001 00000011 00001100 01010101 00010101 10001100 11010001 11110101 11001001 10100010 11101000 01010100 01100110 10111110 11111010 10111111 01001110 11001000 10100000 01110111 11110111 01000000 10001011 10000001 01001101 10001110 01111000 10010001 11101111 11110011 11100000","","Sequence (3):","  Integer: 0","  Sequence (2):","    Object Identifier: 1.2.840.10045.2.1","    Object Identifier: 1.3.132.0.34","  Octet String (167): 30 81 a4 02 01 01 04 30 66 a4 dc e2 49 89 86 a1 6c 25 ed aa 49 33 d6 5d 0c 1c 64 26 a9 b1 31 27 07 19 71 b8 e5 94 17 4a fe df 22 e2 65 b1 2c 31 2b be a7 52 28 8e ee 08 a0 07 06 05 2b 81 04 00 22 a1 64 03 62 00 04 41 6f cc 6a 13 30 31 31 63 c1 8f 79 b8 e1 1d 7c 15 42 ec 7a d0 85 31 86 4f 0c 62 3e 58 03 88 04 6a 0b ac ba 11 0d 40 8e 4b a1 7b 80 34 d9 63 a5 b5 16 10 45 72 b2 b7 3b 29 39 1d b9 51 f8 2d 6a 05 11 03 0c 55 15 8c d1 f5 c9 a2 e8 54 66 be fa bf 4e c8 a0 77 f7 40 8b 81 4d 8e 78 91 ef f3 e0"],"type":"codeListing","syntax":"swift"}]}],"abstract":[{"type":"text","text":"Creating new keys and loading exsisting keys"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swifthpke\/keymanagement"]}],"references":{"doc://SwiftHPKE/documentation/SwiftHPKE/References":{"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/References","abstract":[{"text":"Algorithms from the following books and papers have been used in the implementation","type":"text"}],"type":"topic","kind":"article","role":"article","url":"\/documentation\/swifthpke\/references","title":"References"},"doc://SwiftHPKE/documentation/SwiftHPKE/CipherSuite":{"navigatorTitle":[{"kind":"identifier","text":"CipherSuite"}],"abstract":[{"type":"text","text":"The cipher suite"}],"role":"symbol","url":"\/documentation\/swifthpke\/ciphersuite","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/CipherSuite","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"CipherSuite","kind":"identifier"}],"kind":"symbol","type":"topic","title":"CipherSuite"},"doc://SwiftHPKE/documentation/SwiftHPKE/PrivateKey":{"kind":"symbol","url":"\/documentation\/swifthpke\/privatekey","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"PrivateKey","kind":"identifier"}],"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/PrivateKey","type":"topic","title":"PrivateKey","abstract":[{"type":"text","text":"The private key"}],"navigatorTitle":[{"text":"PrivateKey","kind":"identifier"}]},"doc://SwiftHPKE/documentation/SwiftHPKE/Performance":{"kind":"article","url":"\/documentation\/swifthpke\/performance","abstract":[{"text":"Encryption and decryption speed","type":"text"}],"role":"article","type":"topic","title":"Performance","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Performance"},"doc://SwiftHPKE/documentation/SwiftHPKE/SecretExport":{"kind":"article","abstract":[{"text":"Creating secret messages","type":"text"}],"role":"article","title":"Secret Export","type":"topic","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/SecretExport","url":"\/documentation\/swifthpke\/secretexport"},"doc://SwiftHPKE/documentation/SwiftHPKE/CryptoKit":{"kind":"article","abstract":[{"text":"SwiftHPKE is compatible with Apple’s CryptoKit framework","type":"text"}],"role":"article","title":"CryptoKit Compatibility","type":"topic","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/CryptoKit","url":"\/documentation\/swifthpke\/cryptokit"},"doc://SwiftHPKE/documentation/SwiftHPKE":{"type":"topic","title":"SwiftHPKE","kind":"symbol","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE","url":"\/documentation\/swifthpke","abstract":[{"type":"text","text":"Hybrid Public Key Encryption"}],"role":"collection"},"doc://SwiftHPKE/documentation/SwiftHPKE/PublicKey":{"navigatorTitle":[{"kind":"identifier","text":"PublicKey"}],"role":"symbol","abstract":[{"type":"text","text":"The public key"}],"title":"PublicKey","kind":"symbol","url":"\/documentation\/swifthpke\/publickey","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/PublicKey","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"PublicKey","kind":"identifier"}]}}}