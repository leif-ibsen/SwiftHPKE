{"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/SecretExport"},"kind":"article","metadata":{"role":"article","roleHeading":"Article","title":"Secret Export","modules":[{"name":"SwiftHPKE"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swifthpke\/secretexport"]}],"primaryContentSections":[{"kind":"content","content":[{"type":"heading","anchor":"","text":"","level":2},{"inlineContent":[{"type":"text","text":"Given the recipientâ€™s public key, a sender can generate a secret that only the recipient can know."}],"type":"paragraph"},{"level":3,"type":"heading","anchor":"Example-1","text":"Example 1"},{"syntax":"Swift","type":"codeListing","code":["import SwiftHPKE","","\/\/ The aead need not be .EXPORTONLY, any aead will work","","let theSuite = CipherSuite(kem: .P256, kdf: .KDF256, aead: .EXPORTONLY)","let (recipientPubKey, recipientPrivKey) = try theSuite.makeKeyPair()","","\/\/ Generate the secret","","let (encapsulated, secret) = try theSuite.sendExport(publicKey: recipientPubKey, info: [], context: [1, 2, 3], L: 10)","print(\"Generated secret:\", secret)","","\/\/ The recipient retrieves the secret by means of the encapsulated key","","let retrievedSecret = try theSuite.receiveExport(privateKey: recipientPrivKey, info: [], context: [1, 2, 3], L: 10, encap: encapsulated)","print(\"Retrieved secret:\", retrievedSecret)"]},{"inlineContent":[{"text":"giving (for example):","type":"text"}],"type":"paragraph"},{"syntax":"Swift","code":["Generated secret: [172, 169, 119, 121, 167, 53, 213, 12, 0, 29]","Retrieved secret: [172, 169, 119, 121, 167, 53, 213, 12, 0, 29]"],"type":"codeListing"},{"text":"Example 2","anchor":"Example-2","type":"heading","level":3},{"type":"codeListing","code":["import SwiftHPKE","","\/\/ The aead need not be .EXPORTONLY, any aead will work","","let theSuite = CipherSuite(kem: .P256, kdf: .KDF256, aead: .EXPORTONLY)","let (recipientPubKey, recipientPrivKey) = try theSuite.makeKeyPair()","let sender = try Sender(suite: theSuite, publicKey: recipientPubKey, info: [])","","\/\/ Generate the secret","","let secret = try sender.sendExport(context: [1, 2, 3], L: 10)","print(\"Generated secret:\", secret)","","\/\/ The recipient retrieves the secret by means of the encapsulated key","","let receiver = try Recipient(suite: theSuite, privateKey: recipientPrivKey, info: [], encap: sender.encapsulatedKey)","let retrievedSecret = try receiver.receiveExport(context: [1, 2, 3], L: 10)","print(\"Retrieved secret:\", retrievedSecret)"],"syntax":"Swift"},{"inlineContent":[{"type":"text","text":"giving (for example):"}],"type":"paragraph"},{"type":"codeListing","syntax":"Swift","code":["Generated secret: [3, 230, 139, 128, 86, 4, 81, 78, 110, 135]","Retrieved secret: [3, 230, 139, 128, 86, 4, 81, 78, 110, 135]"]},{"inlineContent":[{"text":"The above examples use Base mode. Preshared key mode, Authenticated mode and Authenticated, preshared key mode","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"is also possible."}],"type":"paragraph"}]}],"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Usage","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Basics","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/CreateKeys","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/LoadKeys","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/EncryptDecrypt","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/CryptoKit","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Performance","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Dependencies","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/References"]}],"references":{"doc://SwiftHPKE/documentation/SwiftHPKE/EncryptDecrypt":{"url":"\/documentation\/swifthpke\/encryptdecrypt","abstract":[],"type":"topic","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/EncryptDecrypt","title":"Encryption and Decryption","role":"article","kind":"article"},"doc://SwiftHPKE/documentation/SwiftHPKE/Usage":{"role":"article","abstract":[],"title":"Usage","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Usage","url":"\/documentation\/swifthpke\/usage","kind":"article","type":"topic"},"doc://SwiftHPKE/documentation/SwiftHPKE/CryptoKit":{"kind":"article","url":"\/documentation\/swifthpke\/cryptokit","role":"article","type":"topic","abstract":[],"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/CryptoKit","title":"Apple CryptoKit Compatibility"},"doc://SwiftHPKE/documentation/SwiftHPKE/Performance":{"kind":"article","url":"\/documentation\/swifthpke\/performance","role":"article","type":"topic","abstract":[],"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Performance","title":"Performance"},"doc://SwiftHPKE/documentation/SwiftHPKE/Dependencies":{"kind":"article","url":"\/documentation\/swifthpke\/dependencies","role":"article","type":"topic","abstract":[],"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Dependencies","title":"Dependencies"},"doc://SwiftHPKE/documentation/SwiftHPKE/LoadKeys":{"type":"topic","title":"Loading Existing Keys","role":"article","abstract":[],"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/LoadKeys","kind":"article","url":"\/documentation\/swifthpke\/loadkeys"},"doc://SwiftHPKE/documentation/SwiftHPKE":{"type":"topic","title":"SwiftHPKE","abstract":[],"url":"\/documentation\/swifthpke","role":"collection","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE","kind":"symbol"},"doc://SwiftHPKE/documentation/SwiftHPKE/Basics":{"type":"topic","title":"Basics","role":"article","abstract":[],"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Basics","kind":"article","url":"\/documentation\/swifthpke\/basics"},"doc://SwiftHPKE/documentation/SwiftHPKE/References":{"type":"topic","title":"References","role":"article","abstract":[],"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/References","kind":"article","url":"\/documentation\/swifthpke\/references"},"doc://SwiftHPKE/documentation/SwiftHPKE/CreateKeys":{"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/CreateKeys","title":"Creating Public and Private Keys","kind":"article","role":"article","abstract":[],"url":"\/documentation\/swifthpke\/createkeys","type":"topic"}}}