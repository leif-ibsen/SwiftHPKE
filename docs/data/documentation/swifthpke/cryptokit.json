{"abstract":[{"type":"text","text":"SwiftHPKE is compatible with Appleâ€™s CryptoKit framework"}],"sections":[],"primaryContentSections":[{"content":[{"anchor":"","level":2,"text":"","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The SwiftHPKE keys of type ","type":"text"},{"type":"codeVoice","code":".P256"},{"type":"text","text":", "},{"code":".P384","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":".P521"},{"text":" and ","type":"text"},{"type":"codeVoice","code":".X25519"},{"type":"text","text":" correspond to CryptoKit keys of type "},{"code":"P256","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"P384"},{"type":"text","text":", "},{"type":"codeVoice","code":"P521"},{"text":" and ","type":"text"},{"code":"Curve25519","type":"codeVoice"},{"text":". Keys of type ","type":"text"},{"type":"codeVoice","code":".X448"},{"text":" is not supported in CryptoKit.","type":"text"}]},{"inlineContent":[{"text":"To convert CryptoKit ","type":"text"},{"type":"codeVoice","code":"P256"},{"text":" keys (similarly for ","type":"text"},{"type":"codeVoice","code":"P384"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"P521"},{"type":"text","text":") - say "},{"code":"ckPriv","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"ckPub"},{"type":"text","text":" to SwiftHPKE keys:"}],"type":"paragraph"},{"code":["let hpkePriv = try PrivateKey(der: Bytes(ckPriv.derRepresentation))","let hpkePub = try PublicKey(der: Bytes(ckPub.derRepresentation))"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"To convert CryptoKit ","type":"text"},{"type":"codeVoice","code":"Curve25519"},{"type":"text","text":" keys - say "},{"type":"codeVoice","code":"ckPriv"},{"text":" and ","type":"text"},{"code":"ckPub","type":"codeVoice"},{"text":" to SwiftHPKE keys:","type":"text"}]},{"code":["let hpkePriv = try PrivateKey(kem: .X25519, bytes: Bytes(ckPriv.rawRepresentation))","let hpkePub = try PublicKey(kem: .X25519, bytes: Bytes(ckPub.rawRepresentation))"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To convert SwiftHPKE "},{"type":"codeVoice","code":".P256"},{"type":"text","text":" keys (similarly for "},{"code":".P384","type":"codeVoice"},{"text":" and ","type":"text"},{"code":".P521","type":"codeVoice"},{"type":"text","text":") - say "},{"type":"codeVoice","code":"hpkePriv"},{"type":"text","text":" and "},{"type":"codeVoice","code":"hpkePub"},{"text":" to CryptoKit keys:","type":"text"}]},{"syntax":"swift","code":["let ckPriv = try CryptoKit.P256.KeyAgreement.PrivateKey(derRepresentation: hpkePriv.der)","let ckPub = try CryptoKit.P256.KeyAgreement.PublicKey(derRepresentation: hpkePub.der)"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"To convert SwiftHPKE ","type":"text"},{"type":"codeVoice","code":".X25519"},{"text":" keys - say ","type":"text"},{"code":"hpkePriv","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"hpkePub"},{"type":"text","text":" to CryptoKit keys:"}]},{"code":["let ckPriv = try CryptoKit.Curve25519.KeyAgreement.PrivateKey(rawRepresentation: hpkePriv.bytes)","let ckPub = try CryptoKit.Curve25519.KeyAgreement.PublicKey(rawRepresentation: hpkePub.bytes)"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/KeyManagement","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/SecretExport","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Performance","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/References"],"title":"Additional Information"}],"metadata":{"role":"article","roleHeading":"Article","title":"CryptoKit Compatibility","modules":[{"name":"SwiftHPKE"}]},"hierarchy":{"paths":[["doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE"]]},"identifier":{"url":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/CryptoKit","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swifthpke\/cryptokit"]}],"kind":"article","references":{"doc://SwiftHPKE/documentation/SwiftHPKE/Performance":{"kind":"article","url":"\/documentation\/swifthpke\/performance","role":"article","abstract":[{"text":"Encryption and decryption speed","type":"text"}],"type":"topic","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Performance","title":"Performance"},"doc://SwiftHPKE/documentation/SwiftHPKE/SecretExport":{"title":"Secret Export","url":"\/documentation\/swifthpke\/secretexport","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/SecretExport","abstract":[{"text":"Creating secret messages","type":"text"}],"type":"topic","role":"article","kind":"article"},"doc://SwiftHPKE/documentation/SwiftHPKE/KeyManagement":{"kind":"article","url":"\/documentation\/swifthpke\/keymanagement","role":"article","abstract":[{"text":"Creating new keys and loading exsisting keys","type":"text"}],"type":"topic","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/KeyManagement","title":"Key Management"},"doc://SwiftHPKE/documentation/SwiftHPKE":{"type":"topic","role":"collection","abstract":[{"text":"Hybrid Public Key Encryption","type":"text"}],"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE","url":"\/documentation\/swifthpke","title":"SwiftHPKE","kind":"symbol"},"doc://SwiftHPKE/documentation/SwiftHPKE/References":{"abstract":[{"type":"text","text":"Algorithms from the following books and papers have been used in the implementation"}],"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/References","role":"article","kind":"article","title":"References","type":"topic","url":"\/documentation\/swifthpke\/references"}}}