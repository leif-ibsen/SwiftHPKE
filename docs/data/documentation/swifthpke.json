{"kind":"symbol","abstract":[{"type":"text","text":"Hybrid Public Key Encryption"}],"variants":[{"paths":["\/documentation\/swifthpke"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"content","content":[{"type":"heading","text":"Overview","level":2,"anchor":"Overview"},{"inlineContent":[{"text":"SwiftHPKE implements the Hybrid Public Key Encryption standard as defined in [RFC 9180].","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The basic concepts in SwiftHPKE are "},{"type":"codeVoice","code":"CipherSuite"},{"type":"text","text":", "},{"type":"codeVoice","code":"Sender"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Recipient"},{"type":"text","text":", represented by the "},{"type":"reference","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/CipherSuite","isActive":true},{"type":"text","text":" structure and the "},{"type":"reference","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Sender","isActive":true},{"text":" and ","type":"text"},{"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Recipient","isActive":true,"type":"reference"},{"text":" classes.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"A CipherSuite combines a "},{"type":"emphasis","inlineContent":[{"text":"Key Encapsulation Mechanism","type":"text"}]},{"text":" (","type":"text"},{"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/KEM","isActive":true,"type":"reference"},{"text":"), a ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"Key Derivation Function","type":"text"}]},{"text":" (","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/KDF"},{"type":"text","text":")"},{"text":" ","type":"text"},{"text":"and a ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"Authenticated Encryption with Associated Data"}]},{"text":" (","type":"text"},{"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/AEAD","isActive":true,"type":"reference"},{"text":") algorithm.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"There are 5 different KEM’s, 3 different KDF’s and 4 different AEAD’s giving 60 CipherSuite combinations."}]},{"inlineContent":[{"text":"Encryption and decryption takes place in one of four modes:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Base mode","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Preshared key mode"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Authenticated mode","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Authenticated, preshared key mode","type":"text"}]}]}]},{"level":3,"text":"Stateless Single-shot API","type":"heading","anchor":"Stateless-Single-shot-API"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"code":"CipherSuite","type":"codeVoice"},{"type":"text","text":" instance can encrypt (seal) a single plaintext message and decrypt (open) a single"},{"text":" ","type":"text"},{"type":"text","text":"ciphertext message without the need for a "},{"type":"codeVoice","code":"Sender"},{"text":" instance and a ","type":"text"},{"type":"codeVoice","code":"Recipient"},{"text":" instance.","type":"text"}]},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Example","type":"text"}]}],"type":"paragraph"},{"code":["\/\/ Encryption and decryption of a single message in base mode","","import SwiftHPKE","","\/\/ The CipherSuite to use","let theSuite = CipherSuite(kem: .X448, kdf: .KDF512, aead: .AESGCM256)","","\/\/ The recipient keys","let (recipientPub, recipientPriv) = try theSuite.makeKeyPair()","","let plainText = Bytes(\"Hi, there\".utf8)","let (encapsulatedKey, cipherText) = try theSuite.seal(publicKey: recipientPub, info: [1, 2, 3], pt: plainText, aad: [4, 5, 6])","let decrypted = try theSuite.open(privateKey: recipientPriv, info: [1, 2, 3], ct: cipherText, aad: [4, 5, 6], encap: encapsulatedKey)","print(String(bytes: decrypted, encoding: .utf8)!)"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"giving:"}],"type":"paragraph"},{"syntax":"swift","code":["Hi, there"],"type":"codeListing"},{"text":"Stateful Multi-message API","level":3,"anchor":"Stateful-Multi-message-API","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"Sender"},{"type":"text","text":" is based on a specific "},{"type":"codeVoice","code":"CipherSuite"},{"type":"text","text":" and a "},{"code":"Sender","type":"codeVoice"},{"type":"text","text":" instance can encrypt (seal)"},{"text":" ","type":"text"},{"type":"text","text":"a sequence of plaintexts in one of the four modes shown above."}]},{"type":"paragraph","inlineContent":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"Recipient"},{"text":" is also based on a specific ","type":"text"},{"type":"codeVoice","code":"CipherSuite"},{"text":" and a ","type":"text"},{"code":"Recipient","type":"codeVoice"},{"type":"text","text":" instance can decrypt (open)"},{"text":" ","type":"text"},{"type":"text","text":"a sequence of ciphertexts in the four modes."}]},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Example","type":"text"}]}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["\/\/ Encryption and decryption of several messages in authenticated mode","","import SwiftHPKE","","\/\/ The CipherSuite to use","let theSuite = CipherSuite(kem: .P384, kdf: .KDF384, aead: .CHACHAPOLY)","","let plainText1 = Bytes(\"Hi, there 1\".utf8)","let plainText2 = Bytes(\"Hi, there 2\".utf8)","let plainText3 = Bytes(\"Hi, there 3\".utf8)","","\/\/ The Sender and Recipient keys","let (senderPub, senderPriv) = try theSuite.makeKeyPair()","let (recipientPub, recipientPriv) = try theSuite.makeKeyPair()","","\/\/ Create the Sender instance","let sender = try Sender(suite: theSuite, publicKey: recipientPub, info: [1, 2, 3], authentication: senderPriv)","","let cipherText1 = try sender.seal(pt: plainText1, aad: [4, 5])","let cipherText2 = try sender.seal(pt: plainText2, aad: [6, 7])","let cipherText3 = try sender.seal(pt: plainText3, aad: [8, 9])","","\/\/ Create the Recipient instance","let recipient = try Recipient(suite: theSuite, privateKey: recipientPriv, info: [1, 2, 3], authentication: senderPub, encap: sender.encapsulatedKey)","","let decrypted1 = try recipient.open(ct: cipherText1, aad: [4, 5])","let decrypted2 = try recipient.open(ct: cipherText2, aad: [6, 7])","let decrypted3 = try recipient.open(ct: cipherText3, aad: [8, 9])","","print(String(bytes: decrypted1, encoding: .utf8)!)","print(String(bytes: decrypted2, encoding: .utf8)!)","print(String(bytes: decrypted3, encoding: .utf8)!)"]},{"inlineContent":[{"text":"giving:","type":"text"}],"type":"paragraph"},{"code":["Hi, there 1","Hi, there 2","Hi, there 3"],"syntax":"swift","type":"codeListing"},{"name":"Important","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The messages must be decrypted in the order in which they were encrypted."}]}],"style":"important","type":"aside"},{"level":3,"anchor":"Usage","type":"heading","text":"Usage"},{"type":"paragraph","inlineContent":[{"text":"To use SwiftHPKE, in your project ","type":"text"},{"inlineContent":[{"type":"text","text":"Package.swift"}],"type":"emphasis"},{"text":" file add a dependency like","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["dependencies: [","  .package(url: \"https:\/\/github.com\/leif-ibsen\/SwiftHPKE\", from: \"2.6.0\"),","]"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"SwiftHPKE itself depends on the ASN1, BigInt and Digest packages"}]},{"syntax":"swift","code":["dependencies: [","  .package(url: \"https:\/\/github.com\/leif-ibsen\/ASN1\", from: \"2.6.0\"),","  .package(url: \"https:\/\/github.com\/leif-ibsen\/BigInt\", from: \"1.19.0\"),","  .package(url: \"https:\/\/github.com\/leif-ibsen\/Digest\", from: \"1.8.0\"),","],"],"type":"codeListing"},{"type":"aside","name":"Important","content":[{"inlineContent":[{"type":"text","text":""},{"text":" ","type":"text"},{"text":"SwiftHPKE requires Swift 5.0. It also requires that the ","type":"text"},{"type":"codeVoice","code":"Int"},{"type":"text","text":" and "},{"code":"UInt","type":"codeVoice"},{"type":"text","text":" types be 64 bit types."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"SwiftHPKE uses Apple’s CryptoKit framework. Therefore, for macOS the version must be at least 10.15,"},{"text":" ","type":"text"},{"type":"text","text":"for iOS the version must be at least 13, and for watchOS the version must be at least 8."}]}],"style":"important"}]}],"metadata":{"modules":[{"name":"SwiftHPKE"}],"roleHeading":"Framework","role":"collection","title":"SwiftHPKE","symbolKind":"module","externalID":"SwiftHPKE"},"topicSections":[{"title":"Classes","identifiers":["doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Recipient","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Sender"]},{"title":"Structures","identifiers":["doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/CipherSuite","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/PrivateKey","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/PublicKey"]},{"identifiers":["doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Byte","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Bytes"],"title":"Type Aliases"},{"identifiers":["doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/AEAD","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/KDF","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/KEM","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/HPKEException"],"title":"Enumerations"},{"title":"Additional Information","identifiers":["doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/KeyManagement","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/SecretExport","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/CryptoKit","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Performance","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/References"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE","interfaceLanguage":"swift"},"hierarchy":{"paths":[[]]},"sections":[],"references":{"doc://SwiftHPKE/documentation/SwiftHPKE/CryptoKit":{"kind":"article","abstract":[{"text":"SwiftHPKE is compatible with Apple’s CryptoKit framework","type":"text"}],"role":"article","title":"CryptoKit Compatibility","type":"topic","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/CryptoKit","url":"\/documentation\/swifthpke\/cryptokit"},"doc://SwiftHPKE/documentation/SwiftHPKE/SecretExport":{"kind":"article","abstract":[{"text":"Creating secret messages","type":"text"}],"role":"article","title":"Secret Export","type":"topic","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/SecretExport","url":"\/documentation\/swifthpke\/secretexport"},"doc://SwiftHPKE/documentation/SwiftHPKE/CipherSuite":{"navigatorTitle":[{"kind":"identifier","text":"CipherSuite"}],"abstract":[{"type":"text","text":"The cipher suite"}],"role":"symbol","url":"\/documentation\/swifthpke\/ciphersuite","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/CipherSuite","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"CipherSuite","kind":"identifier"}],"kind":"symbol","type":"topic","title":"CipherSuite"},"doc://SwiftHPKE/documentation/SwiftHPKE/Byte":{"navigatorTitle":[{"text":"Byte","kind":"identifier"}],"abstract":[{"type":"text","text":"Unsigned 8 bit value"}],"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Byte","title":"Byte","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"Byte","kind":"identifier"}],"url":"\/documentation\/swifthpke\/byte","kind":"symbol","type":"topic","role":"symbol"},"doc://SwiftHPKE/documentation/SwiftHPKE/KEM":{"role":"symbol","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/KEM","navigatorTitle":[{"kind":"identifier","text":"KEM"}],"url":"\/documentation\/swifthpke\/kem","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"KEM","kind":"identifier"}],"type":"topic","abstract":[{"text":"The key encapsulation mechanisms","type":"text"}],"title":"KEM","kind":"symbol"},"doc://SwiftHPKE/documentation/SwiftHPKE/PrivateKey":{"kind":"symbol","url":"\/documentation\/swifthpke\/privatekey","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"PrivateKey","kind":"identifier"}],"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/PrivateKey","type":"topic","title":"PrivateKey","abstract":[{"type":"text","text":"The private key"}],"navigatorTitle":[{"text":"PrivateKey","kind":"identifier"}]},"doc://SwiftHPKE/documentation/SwiftHPKE/KeyManagement":{"kind":"article","abstract":[{"text":"Creating new keys and loading exsisting keys","type":"text"}],"role":"article","title":"Key Management","type":"topic","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/KeyManagement","url":"\/documentation\/swifthpke\/keymanagement"},"doc://SwiftHPKE/documentation/SwiftHPKE/KDF":{"kind":"symbol","type":"topic","role":"symbol","title":"KDF","abstract":[{"type":"text","text":"The key derivation functions"}],"navigatorTitle":[{"text":"KDF","kind":"identifier"}],"url":"\/documentation\/swifthpke\/kdf","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/KDF","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"KDF"}]},"doc://SwiftHPKE/documentation/SwiftHPKE/PublicKey":{"navigatorTitle":[{"kind":"identifier","text":"PublicKey"}],"role":"symbol","abstract":[{"type":"text","text":"The public key"}],"title":"PublicKey","kind":"symbol","url":"\/documentation\/swifthpke\/publickey","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/PublicKey","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"PublicKey","kind":"identifier"}]},"doc://SwiftHPKE/documentation/SwiftHPKE/Performance":{"kind":"article","url":"\/documentation\/swifthpke\/performance","abstract":[{"text":"Encryption and decryption speed","type":"text"}],"role":"article","type":"topic","title":"Performance","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Performance"},"doc://SwiftHPKE/documentation/SwiftHPKE/Bytes":{"type":"topic","url":"\/documentation\/swifthpke\/bytes","abstract":[{"text":"Array of unsigned 8 bit values","type":"text"}],"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Bytes","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Bytes","kind":"identifier"}],"kind":"symbol","title":"Bytes","role":"symbol","navigatorTitle":[{"text":"Bytes","kind":"identifier"}]},"doc://SwiftHPKE/documentation/SwiftHPKE/HPKEException":{"type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HPKEException"}],"title":"HPKEException","kind":"symbol","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/HPKEException","url":"\/documentation\/swifthpke\/hpkeexception","navigatorTitle":[{"text":"HPKEException","kind":"identifier"}],"abstract":[{"type":"text","text":"The HPKE exceptions"}],"role":"symbol"},"doc://SwiftHPKE/documentation/SwiftHPKE/Recipient":{"url":"\/documentation\/swifthpke\/recipient","navigatorTitle":[{"text":"Recipient","kind":"identifier"}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Recipient","kind":"identifier"}],"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Recipient","abstract":[{"text":"The recipient","type":"text"}],"type":"topic","title":"Recipient","kind":"symbol"},"doc://SwiftHPKE/documentation/SwiftHPKE/References":{"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/References","abstract":[{"text":"Algorithms from the following books and papers have been used in the implementation","type":"text"}],"type":"topic","kind":"article","role":"article","url":"\/documentation\/swifthpke\/references","title":"References"},"doc://SwiftHPKE/documentation/SwiftHPKE/AEAD":{"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/AEAD","url":"\/documentation\/swifthpke\/aead","title":"AEAD","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"AEAD"}],"type":"topic","abstract":[{"text":"The AEAD encryption algorithms","type":"text"}],"navigatorTitle":[{"text":"AEAD","kind":"identifier"}],"kind":"symbol"},"doc://SwiftHPKE/documentation/SwiftHPKE":{"type":"topic","title":"SwiftHPKE","kind":"symbol","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE","url":"\/documentation\/swifthpke","abstract":[{"type":"text","text":"Hybrid Public Key Encryption"}],"role":"collection"},"doc://SwiftHPKE/documentation/SwiftHPKE/Sender":{"kind":"symbol","abstract":[{"text":"The sender","type":"text"}],"role":"symbol","title":"Sender","type":"topic","navigatorTitle":[{"text":"Sender","kind":"identifier"}],"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Sender","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Sender"}],"url":"\/documentation\/swifthpke\/sender"}}}