{"identifier":{"url":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE","interfaceLanguage":"swift"},"sections":[],"topicSections":[{"title":"Classes","identifiers":["doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Recipient","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Sender"]},{"identifiers":["doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/CipherSuite","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/PrivateKey","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/PublicKey","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Base64"],"title":"Structures"},{"title":"Type Aliases","identifiers":["doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Byte","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Bytes"]},{"identifiers":["doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/AEAD","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/KDF","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/KEM","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/HPKEException"],"title":"Enumerations"},{"title":"Additional Information","identifiers":["doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/KeyManagement","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/SecretExport","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/CryptoKit","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Performance","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/References"]}],"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","type":"heading","level":2,"anchor":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"SwiftHPKE implements the Hybrid Public Key Encryption standard as defined in [RFC 9180]."}]},{"type":"paragraph","inlineContent":[{"text":"The basic concepts in SwiftHPKE are CipherSuite, Sender and Recipient, represented by the ","type":"text"},{"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/CipherSuite","isActive":true,"type":"reference"},{"text":" structure and the ","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Sender","isActive":true},{"type":"text","text":" and "},{"type":"reference","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Recipient","isActive":true},{"type":"text","text":" classes."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"A CipherSuite combines a "},{"type":"emphasis","inlineContent":[{"text":"Key Encapsulation Mechanism","type":"text"}]},{"text":" (","type":"text"},{"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/KEM","isActive":true,"type":"reference"},{"text":"), a ","type":"text"},{"inlineContent":[{"type":"text","text":"Key Derivation Function"}],"type":"emphasis"},{"text":" (","type":"text"},{"type":"reference","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/KDF","isActive":true},{"text":")","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and a "},{"inlineContent":[{"text":"Authenticated Encryption with Associated Data","type":"text"}],"type":"emphasis"},{"type":"text","text":" ("},{"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/AEAD","isActive":true,"type":"reference"},{"type":"text","text":") algorithm."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"There are 5 different KEM’s, 3 different KDF’s and 4 different AEAD’s giving 60 CipherSuite combinations."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Encryption and decryption takes place in one of four modes:"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Base mode","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Preshared key mode","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Authenticated mode","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Authenticated, preshared key mode","type":"text"}]}]}]},{"level":3,"type":"heading","anchor":"Stateless-Single-shot-API","text":"Stateless Single-shot API"},{"inlineContent":[{"text":"A ","type":"text"},{"code":"CipherSuite","type":"codeVoice"},{"type":"text","text":" instance can encrypt (seal) a single plaintext message and decrypt (open) a single"},{"text":" ","type":"text"},{"type":"text","text":"ciphertext message without the need for a "},{"type":"codeVoice","code":"Sender"},{"text":" instance and a ","type":"text"},{"type":"codeVoice","code":"Recipient"},{"type":"text","text":" instance."}],"type":"paragraph"},{"inlineContent":[{"inlineContent":[{"type":"text","text":"Example"}],"type":"strong"}],"type":"paragraph"},{"code":["\/\/ Encryption and decryption of a single message in base mode","","import SwiftHPKE","","\/\/ The CipherSuite to use","let theSuite = CipherSuite(kem: .X448, kdf: .KDF512, aead: .AESGCM256)","","\/\/ The recipient keys","let (recipientPub, recipientPriv) = try theSuite.makeKeyPair()","","let plainText = Bytes(\"Hi, there\".utf8)","let (encapsulatedKey, cipherText) = try theSuite.seal(publicKey: recipientPub, info: [1, 2, 3], pt: plainText, aad: [4, 5, 6])","let decrypted = try theSuite.open(privateKey: recipientPriv, info: [1, 2, 3], ct: cipherText, aad: [4, 5, 6], encap: encapsulatedKey)","print(String(bytes: decrypted, encoding: .utf8)!)"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"giving:","type":"text"}],"type":"paragraph"},{"code":["Hi, there"],"type":"codeListing","syntax":"swift"},{"type":"heading","level":3,"anchor":"Statefull-Multi-message-API","text":"Statefull Multi-message API"},{"type":"paragraph","inlineContent":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"Sender"},{"type":"text","text":" is based on a specific "},{"code":"CipherSuite","type":"codeVoice"},{"type":"text","text":" and a "},{"code":"Sender","type":"codeVoice"},{"type":"text","text":" instance can encrypt (seal)"},{"text":" ","type":"text"},{"type":"text","text":"a sequence of plaintexts in one of the four modes shown above."}]},{"type":"paragraph","inlineContent":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"Recipient"},{"type":"text","text":" is also based on a specific "},{"code":"CipherSuite","type":"codeVoice"},{"type":"text","text":" and a "},{"code":"Recipient","type":"codeVoice"},{"type":"text","text":" instance can decrypt (open)"},{"type":"text","text":" "},{"type":"text","text":"a sequence of ciphertexts in the four modes."}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Example"}]}]},{"code":["\/\/ Encryption and decryption of several messages in authenticated mode","","import SwiftHPKE","","\/\/ The CipherSuite to use","let theSuite = CipherSuite(kem: .P384, kdf: .KDF384, aead: .CHACHAPOLY)","","let plainText1 = Bytes(\"Hi, there 1\".utf8)","let plainText2 = Bytes(\"Hi, there 2\".utf8)","let plainText3 = Bytes(\"Hi, there 3\".utf8)","","\/\/ The Sender and Recipient keys","let (senderPub, senderPriv) = try theSuite.makeKeyPair()","let (recipientPub, recipientPriv) = try theSuite.makeKeyPair()","","\/\/ Create the Sender instance","let sender = try Sender(suite: theSuite, publicKey: recipientPub, info: [1, 2, 3], authentication: senderPriv)","","let cipherText1 = try sender.seal(pt: plainText1, aad: [4, 5])","let cipherText2 = try sender.seal(pt: plainText2, aad: [6, 7])","let cipherText3 = try sender.seal(pt: plainText3, aad: [8, 9])","","\/\/ Create the Recipient instance","let recipient = try Recipient(suite: theSuite, privateKey: recipientPriv, info: [1, 2, 3], authentication: senderPub, encap: sender.encapsulatedKey)","","let decrypted1 = try recipient.open(ct: cipherText1, aad: [4, 5])","let decrypted2 = try recipient.open(ct: cipherText2, aad: [6, 7])","let decrypted3 = try recipient.open(ct: cipherText3, aad: [8, 9])","","print(String(bytes: decrypted1, encoding: .utf8)!)","print(String(bytes: decrypted2, encoding: .utf8)!)","print(String(bytes: decrypted3, encoding: .utf8)!)"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"giving:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["Hi, there 1","Hi, there 2","Hi, there 3"],"type":"codeListing"},{"style":"important","name":"Important","type":"aside","content":[{"inlineContent":[{"type":"text","text":""},{"text":" ","type":"text"},{"text":"The messages must be decrypted in the order in which they were encrypted.","type":"text"}],"type":"paragraph"}]},{"type":"heading","level":3,"text":"Usage","anchor":"Usage"},{"inlineContent":[{"type":"text","text":"To use SwiftHPKE, in your project "},{"inlineContent":[{"text":"Package.swift","type":"text"}],"type":"emphasis"},{"type":"text","text":" file add a dependency like"}],"type":"paragraph"},{"type":"codeListing","code":["dependencies: [","  .package(url: \"https:\/\/github.com\/leif-ibsen\/SwiftHPKE\", from: \"2.4.0\"),","]"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"SwiftHPKE itself depends on the ASN1, BigInt and Digest packages"}],"type":"paragraph"},{"code":["dependencies: [","  .package(url: \"https:\/\/github.com\/leif-ibsen\/ASN1\", from: \"2.4.0\"),","  .package(url: \"https:\/\/github.com\/leif-ibsen\/BigInt\", from: \"1.16.0\"),","  .package(url: \"https:\/\/github.com\/leif-ibsen\/Digest\", from: \"1.3.0\"),","],"],"syntax":"swift","type":"codeListing"},{"content":[{"inlineContent":[{"text":"","type":"text"},{"text":" ","type":"text"},{"text":"SwiftHPKE requires Swift 5.0. It also requires that the ","type":"text"},{"type":"codeVoice","code":"Int"},{"type":"text","text":" and "},{"code":"UInt","type":"codeVoice"},{"text":" types be 64 bit types.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"SwiftHPKE uses Apple’s CryptoKit framework. Therefore, for macOS the version must be at least 10.15,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"for iOS the version must be at least 13, and for watchOS the version must be at least 8."}]}],"name":"Important","type":"aside","style":"important"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swifthpke"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"externalID":"SwiftHPKE","title":"SwiftHPKE","roleHeading":"Framework","modules":[{"name":"SwiftHPKE"}],"role":"collection","symbolKind":"module"},"abstract":[{"text":"Hybrid Public Key Encryption","type":"text"}],"hierarchy":{"paths":[[]]},"kind":"symbol","references":{"doc://SwiftHPKE/documentation/SwiftHPKE/Byte":{"role":"symbol","type":"topic","url":"\/documentation\/swifthpke\/byte","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Byte","kind":"symbol","abstract":[{"type":"text","text":"Unsigned 8 bit value"}],"navigatorTitle":[{"text":"Byte","kind":"identifier"}],"title":"Byte","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Byte","kind":"identifier"}]},"doc://SwiftHPKE/documentation/SwiftHPKE/Recipient":{"kind":"symbol","title":"Recipient","url":"\/documentation\/swifthpke\/recipient","role":"symbol","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Recipient"}],"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Recipient","navigatorTitle":[{"text":"Recipient","kind":"identifier"}],"abstract":[{"text":"The recipient","type":"text"}]},"doc://SwiftHPKE/documentation/SwiftHPKE/KDF":{"navigatorTitle":[{"text":"KDF","kind":"identifier"}],"abstract":[{"text":"The key derivation functions","type":"text"}],"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/KDF","title":"KDF","url":"\/documentation\/swifthpke\/kdf","type":"topic","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"KDF","kind":"identifier"}]},"doc://SwiftHPKE/documentation/SwiftHPKE/CryptoKit":{"kind":"article","url":"\/documentation\/swifthpke\/cryptokit","role":"article","abstract":[{"text":"SwiftHPKE is compatible with Apple’s CryptoKit framework","type":"text"}],"type":"topic","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/CryptoKit","title":"CryptoKit Compatibility"},"doc://SwiftHPKE/documentation/SwiftHPKE/Sender":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Sender"}],"navigatorTitle":[{"text":"Sender","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"The sender"}],"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Sender","type":"topic","url":"\/documentation\/swifthpke\/sender","role":"symbol","title":"Sender"},"doc://SwiftHPKE/documentation/SwiftHPKE":{"type":"topic","role":"collection","abstract":[{"text":"Hybrid Public Key Encryption","type":"text"}],"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE","url":"\/documentation\/swifthpke","title":"SwiftHPKE","kind":"symbol"},"doc://SwiftHPKE/documentation/SwiftHPKE/AEAD":{"navigatorTitle":[{"text":"AEAD","kind":"identifier"}],"type":"topic","title":"AEAD","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/AEAD","url":"\/documentation\/swifthpke\/aead","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AEAD"}],"abstract":[{"type":"text","text":"The AEAD encryption algorithms"}],"role":"symbol","kind":"symbol"},"doc://SwiftHPKE/documentation/SwiftHPKE/SecretExport":{"title":"Secret Export","url":"\/documentation\/swifthpke\/secretexport","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/SecretExport","abstract":[{"text":"Creating secret messages","type":"text"}],"type":"topic","role":"article","kind":"article"},"doc://SwiftHPKE/documentation/SwiftHPKE/Bytes":{"navigatorTitle":[{"text":"Bytes","kind":"identifier"}],"title":"Bytes","abstract":[{"type":"text","text":"Array of unsigned 8 bit values"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Bytes","type":"topic","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Bytes"}],"url":"\/documentation\/swifthpke\/bytes"},"doc://SwiftHPKE/documentation/SwiftHPKE/PrivateKey":{"title":"PrivateKey","type":"topic","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/PrivateKey","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"PrivateKey"}],"abstract":[{"type":"text","text":"The private key"}],"url":"\/documentation\/swifthpke\/privatekey","role":"symbol","navigatorTitle":[{"text":"PrivateKey","kind":"identifier"}],"kind":"symbol"},"doc://SwiftHPKE/documentation/SwiftHPKE/CipherSuite":{"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/CipherSuite","abstract":[{"text":"The cipher suite","type":"text"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CipherSuite"}],"kind":"symbol","title":"CipherSuite","url":"\/documentation\/swifthpke\/ciphersuite","role":"symbol","navigatorTitle":[{"text":"CipherSuite","kind":"identifier"}]},"doc://SwiftHPKE/documentation/SwiftHPKE/KEM":{"kind":"symbol","url":"\/documentation\/swifthpke\/kem","abstract":[{"text":"The key encapsulation mechanisms","type":"text"}],"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/KEM","role":"symbol","title":"KEM","type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"KEM","kind":"identifier"}],"navigatorTitle":[{"text":"KEM","kind":"identifier"}]},"doc://SwiftHPKE/documentation/SwiftHPKE/HPKEException":{"role":"symbol","type":"topic","navigatorTitle":[{"text":"HPKEException","kind":"identifier"}],"url":"\/documentation\/swifthpke\/hpkeexception","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"HPKEException"}],"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/HPKEException","title":"HPKEException","abstract":[{"text":"The HPKE exceptions","type":"text"}]},"doc://SwiftHPKE/documentation/SwiftHPKE/Base64":{"url":"\/documentation\/swifthpke\/base64","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Base64"}],"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Base64","navigatorTitle":[{"text":"Base64","kind":"identifier"}],"title":"Base64","role":"symbol","kind":"symbol","abstract":[{"text":"The Base64 structure","type":"text"}],"type":"topic"},"doc://SwiftHPKE/documentation/SwiftHPKE/PublicKey":{"url":"\/documentation\/swifthpke\/publickey","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/PublicKey","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PublicKey"}],"type":"topic","navigatorTitle":[{"text":"PublicKey","kind":"identifier"}],"kind":"symbol","title":"PublicKey","abstract":[{"text":"The public key","type":"text"}],"role":"symbol"},"doc://SwiftHPKE/documentation/SwiftHPKE/KeyManagement":{"kind":"article","url":"\/documentation\/swifthpke\/keymanagement","role":"article","abstract":[{"text":"Creating new keys and loading exsisting keys","type":"text"}],"type":"topic","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/KeyManagement","title":"Key Management"},"doc://SwiftHPKE/documentation/SwiftHPKE/Performance":{"kind":"article","url":"\/documentation\/swifthpke\/performance","role":"article","abstract":[{"text":"Encryption and decryption speed","type":"text"}],"type":"topic","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Performance","title":"Performance"},"doc://SwiftHPKE/documentation/SwiftHPKE/References":{"abstract":[{"type":"text","text":"Algorithms from the following books and papers have been used in the implementation"}],"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/References","role":"article","kind":"article","title":"References","type":"topic","url":"\/documentation\/swifthpke\/references"}}}