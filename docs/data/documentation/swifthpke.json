{"abstract":[{"type":"text","text":"Hybrid Public Key Encryption"}],"sections":[],"primaryContentSections":[{"kind":"content","content":[{"type":"heading","level":2,"text":"Overview","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"text":"SwiftHPKE implements the Hybrid Public Key Encryption standard as defined in [RFC 9180].","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The basic concepts in SwiftHPKE are "},{"type":"codeVoice","code":"CipherSuite"},{"type":"text","text":", "},{"type":"codeVoice","code":"Sender"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Recipient"},{"type":"text","text":", represented by the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/CipherSuite"},{"type":"text","text":" structure and the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Sender"},{"type":"text","text":" and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Recipient"},{"type":"text","text":" classes."}]},{"type":"paragraph","inlineContent":[{"text":"A CipherSuite combines a ","type":"text"},{"inlineContent":[{"text":"Key Encapsulation Mechanism","type":"text"}],"type":"emphasis"},{"text":" (","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/KEM","type":"reference"},{"text":"), a ","type":"text"},{"inlineContent":[{"type":"text","text":"Key Derivation Function"}],"type":"emphasis"},{"text":" (","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/KDF","type":"reference"},{"text":")","type":"text"},{"text":" ","type":"text"},{"text":"and a ","type":"text"},{"inlineContent":[{"type":"text","text":"Authenticated Encryption with Associated Data"}],"type":"emphasis"},{"type":"text","text":" ("},{"type":"reference","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/AEAD","isActive":true},{"type":"text","text":") algorithm."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"There are 5 different KEM’s, 3 different KDF’s and 4 different AEAD’s giving 60 CipherSuite combinations."}]},{"type":"paragraph","inlineContent":[{"text":"Encryption and decryption takes place in one of four modes:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Base mode","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Preshared key mode"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Authenticated mode"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Authenticated, preshared key mode"}]}]}]},{"anchor":"Stateless-Single-shot-API","level":3,"type":"heading","text":"Stateless Single-shot API"},{"type":"paragraph","inlineContent":[{"text":"A ","type":"text"},{"code":"CipherSuite","type":"codeVoice"},{"text":" instance can encrypt (seal) a single plaintext message and decrypt (open) a single","type":"text"},{"text":" ","type":"text"},{"text":"ciphertext message without the need for a ","type":"text"},{"code":"Sender","type":"codeVoice"},{"text":" instance and a ","type":"text"},{"code":"Recipient","type":"codeVoice"},{"text":" instance.","type":"text"}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Example"}],"type":"strong"}]},{"code":["\/\/ Encryption and decryption of a single message in base mode","","import SwiftHPKE","","\/\/ The CipherSuite to use","let theSuite = CipherSuite(kem: .X448, kdf: .KDF512, aead: .AESGCM256)","","\/\/ The recipient keys","let (recipientPub, recipientPriv) = try theSuite.makeKeyPair()","","let plainText = Bytes(\"Hi, there\".utf8)","let (encapsulatedKey, cipherText) = try theSuite.seal(publicKey: recipientPub, info: [1, 2, 3], pt: plainText, aad: [4, 5, 6])","let decrypted = try theSuite.open(privateKey: recipientPriv, info: [1, 2, 3], ct: cipherText, aad: [4, 5, 6], encap: encapsulatedKey)","print(String(bytes: decrypted, encoding: .utf8)!)"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"giving:"}]},{"code":["Hi, there"],"type":"codeListing","syntax":"swift"},{"anchor":"Stateful-Multi-message-API","level":3,"type":"heading","text":"Stateful Multi-message API"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"code":"Sender","type":"codeVoice"},{"type":"text","text":" is based on a specific "},{"code":"CipherSuite","type":"codeVoice"},{"type":"text","text":" and a "},{"code":"Sender","type":"codeVoice"},{"type":"text","text":" instance can encrypt (seal)"},{"type":"text","text":" "},{"type":"text","text":"a sequence of plaintexts in one of the four modes shown above."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Recipient"},{"type":"text","text":" is also based on a specific "},{"type":"codeVoice","code":"CipherSuite"},{"type":"text","text":" and a "},{"type":"codeVoice","code":"Recipient"},{"type":"text","text":" instance can decrypt (open)"},{"type":"text","text":" "},{"type":"text","text":"a sequence of ciphertexts in the four modes."}]},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Example"}]}],"type":"paragraph"},{"code":["\/\/ Encryption and decryption of several messages in authenticated mode","","import SwiftHPKE","","\/\/ The CipherSuite to use","let theSuite = CipherSuite(kem: .P384, kdf: .KDF384, aead: .CHACHAPOLY)","","let plainText1 = Bytes(\"Hi, there 1\".utf8)","let plainText2 = Bytes(\"Hi, there 2\".utf8)","let plainText3 = Bytes(\"Hi, there 3\".utf8)","","\/\/ The Sender and Recipient keys","let (senderPub, senderPriv) = try theSuite.makeKeyPair()","let (recipientPub, recipientPriv) = try theSuite.makeKeyPair()","","\/\/ Create the Sender instance","let sender = try Sender(suite: theSuite, publicKey: recipientPub, info: [1, 2, 3], authentication: senderPriv)","","let cipherText1 = try sender.seal(pt: plainText1, aad: [4, 5])","let cipherText2 = try sender.seal(pt: plainText2, aad: [6, 7])","let cipherText3 = try sender.seal(pt: plainText3, aad: [8, 9])","","\/\/ Create the Recipient instance","let recipient = try Recipient(suite: theSuite, privateKey: recipientPriv, info: [1, 2, 3], authentication: senderPub, encap: sender.encapsulatedKey)","","let decrypted1 = try recipient.open(ct: cipherText1, aad: [4, 5])","let decrypted2 = try recipient.open(ct: cipherText2, aad: [6, 7])","let decrypted3 = try recipient.open(ct: cipherText3, aad: [8, 9])","","print(String(bytes: decrypted1, encoding: .utf8)!)","print(String(bytes: decrypted2, encoding: .utf8)!)","print(String(bytes: decrypted3, encoding: .utf8)!)"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"giving:"}],"type":"paragraph"},{"code":["Hi, there 1","Hi, there 2","Hi, there 3"],"syntax":"swift","type":"codeListing"},{"style":"important","name":"Important","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"text":" ","type":"text"},{"text":"The messages must be decrypted in the order in which they were encrypted.","type":"text"}]}],"type":"aside"},{"type":"heading","text":"Usage","level":3,"anchor":"Usage"},{"type":"paragraph","inlineContent":[{"text":"To use SwiftHPKE, in your project ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"Package.swift","type":"text"}]},{"text":" file add a dependency like","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["dependencies: [","  .package(url: \"https:\/\/github.com\/leif-ibsen\/SwiftHPKE\", from: \"2.7.0\"),","]"]},{"type":"paragraph","inlineContent":[{"text":"SwiftHPKE itself depends on the ","type":"text"},{"isActive":true,"identifier":"https:\/\/leif-ibsen.github.io\/ASN1\/documentation\/asn1","type":"reference"},{"text":", ","type":"text"},{"isActive":true,"identifier":"https:\/\/leif-ibsen.github.io\/BigInt\/documentation\/bigint","type":"reference"},{"text":" and ","type":"text"},{"isActive":true,"identifier":"https:\/\/leif-ibsen.github.io\/Digest\/documentation\/digest","type":"reference"},{"text":" packages","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["dependencies: [","  .package(url: \"https:\/\/github.com\/leif-ibsen\/ASN1\", from: \"2.7.0\"),","  .package(url: \"https:\/\/github.com\/leif-ibsen\/BigInt\", from: \"1.21.0\"),","  .package(url: \"https:\/\/github.com\/leif-ibsen\/Digest\", from: \"1.13.0\"),","],"]},{"type":"aside","style":"important","name":"Important","content":[{"inlineContent":[{"type":"text","text":""},{"type":"text","text":" "},{"type":"text","text":"SwiftHPKE requires Swift 5.0. It also requires that the "},{"code":"Int","type":"codeVoice"},{"type":"text","text":" and "},{"code":"UInt","type":"codeVoice"},{"type":"text","text":" types be 64 bit types."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"SwiftHPKE uses Apple’s CryptoKit framework. Therefore, for macOS the version must be at least 10.15,"},{"type":"text","text":" "},{"type":"text","text":"for iOS the version must be at least 13, and for watchOS the version must be at least 8."}],"type":"paragraph"}]}]}],"hierarchy":{"paths":[[]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"topicSections":[{"anchor":"Classes","identifiers":["doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Recipient","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Sender"],"title":"Classes"},{"anchor":"Structures","identifiers":["doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/CipherSuite","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/PrivateKey","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/PublicKey"],"title":"Structures"},{"anchor":"Type-Aliases","identifiers":["doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Byte","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Bytes"],"title":"Type Aliases"},{"anchor":"Enumerations","identifiers":["doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/AEAD","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/KDF","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/KEM","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/HPKEException"],"title":"Enumerations"},{"anchor":"Additional-Information","identifiers":["doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/KeyManagement","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/SecretExport","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/CryptoKit","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Performance","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/References"],"title":"Additional Information"}],"identifier":{"url":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE","interfaceLanguage":"swift"},"metadata":{"modules":[{"name":"SwiftHPKE"}],"title":"SwiftHPKE","externalID":"SwiftHPKE","roleHeading":"Framework","symbolKind":"module","role":"collection"},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swifthpke"]}],"references":{"doc://SwiftHPKE/documentation/SwiftHPKE/KDF":{"role":"symbol","type":"topic","abstract":[{"text":"The key derivation functions","type":"text"}],"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/KDF","title":"KDF","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"KDF","kind":"identifier"}],"url":"\/documentation\/swifthpke\/kdf","kind":"symbol","navigatorTitle":[{"text":"KDF","kind":"identifier"}]},"doc://SwiftHPKE/documentation/SwiftHPKE/Sender":{"type":"topic","url":"\/documentation\/swifthpke\/sender","role":"symbol","kind":"symbol","title":"Sender","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Sender","kind":"identifier"}],"abstract":[{"type":"text","text":"The sender"}],"navigatorTitle":[{"text":"Sender","kind":"identifier"}],"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Sender"},"doc://SwiftHPKE/documentation/SwiftHPKE/CryptoKit":{"abstract":[{"type":"text","text":"SwiftHPKE is compatible with Apple’s CryptoKit framework"}],"title":"CryptoKit Compatibility","type":"topic","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/CryptoKit","role":"article","url":"\/documentation\/swifthpke\/cryptokit","kind":"article"},"doc://SwiftHPKE/documentation/SwiftHPKE":{"kind":"symbol","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE","type":"topic","title":"SwiftHPKE","abstract":[{"type":"text","text":"Hybrid Public Key Encryption"}],"url":"\/documentation\/swifthpke","role":"collection"},"doc://SwiftHPKE/documentation/SwiftHPKE/CipherSuite":{"title":"CipherSuite","role":"symbol","url":"\/documentation\/swifthpke\/ciphersuite","type":"topic","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/CipherSuite","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CipherSuite"}],"navigatorTitle":[{"kind":"identifier","text":"CipherSuite"}],"abstract":[{"text":"The cipher suite","type":"text"}]},"doc://SwiftHPKE/documentation/SwiftHPKE/HPKEException":{"type":"topic","title":"HPKEException","navigatorTitle":[{"text":"HPKEException","kind":"identifier"}],"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/HPKEException","url":"\/documentation\/swifthpke\/hpkeexception","kind":"symbol","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HPKEException","kind":"identifier"}],"abstract":[{"type":"text","text":"The HPKE exceptions"}]},"doc://SwiftHPKE/documentation/SwiftHPKE/AEAD":{"title":"AEAD","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AEAD"}],"navigatorTitle":[{"kind":"identifier","text":"AEAD"}],"role":"symbol","url":"\/documentation\/swifthpke\/aead","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/AEAD","abstract":[{"type":"text","text":"The AEAD encryption algorithms"}],"kind":"symbol","type":"topic"},"doc://SwiftHPKE/documentation/SwiftHPKE/References":{"kind":"article","type":"topic","url":"\/documentation\/swifthpke\/references","title":"References","abstract":[{"text":"Algorithms from the following books and papers have been used in the implementation","type":"text"}],"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/References","role":"article"},"doc://SwiftHPKE/documentation/SwiftHPKE/KeyManagement":{"title":"Key Management","abstract":[{"text":"Creating new keys and loading exsisting keys","type":"text"}],"kind":"article","role":"article","url":"\/documentation\/swifthpke\/keymanagement","type":"topic","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/KeyManagement"},"doc://SwiftHPKE/documentation/SwiftHPKE/Performance":{"title":"Performance","type":"topic","kind":"article","url":"\/documentation\/swifthpke\/performance","role":"article","abstract":[{"text":"Encryption and decryption speed","type":"text"}],"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Performance"},"doc://SwiftHPKE/documentation/SwiftHPKE/Bytes":{"abstract":[{"type":"text","text":"Array of unsigned 8 bit values"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Bytes","role":"symbol","title":"Bytes","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Bytes","kind":"identifier"}],"navigatorTitle":[{"text":"Bytes","kind":"identifier"}],"url":"\/documentation\/swifthpke\/bytes"},"doc://SwiftHPKE/documentation/SwiftHPKE/PublicKey":{"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/PublicKey","title":"PublicKey","url":"\/documentation\/swifthpke\/publickey","navigatorTitle":[{"text":"PublicKey","kind":"identifier"}],"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"PublicKey","kind":"identifier"}],"role":"symbol","abstract":[{"text":"The public key","type":"text"}]},"https://leif-ibsen.github.io/BigInt/documentation/bigint":{"type":"link","identifier":"https:\/\/leif-ibsen.github.io\/BigInt\/documentation\/bigint","titleInlineContent":[{"type":"text","text":"BigInt"}],"title":"BigInt","url":"https:\/\/leif-ibsen.github.io\/BigInt\/documentation\/bigint"},"doc://SwiftHPKE/documentation/SwiftHPKE/PrivateKey":{"url":"\/documentation\/swifthpke\/privatekey","title":"PrivateKey","role":"symbol","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/PrivateKey","abstract":[{"text":"The private key","type":"text"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrivateKey","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"PrivateKey","kind":"identifier"}]},"doc://SwiftHPKE/documentation/SwiftHPKE/Recipient":{"navigatorTitle":[{"text":"Recipient","kind":"identifier"}],"abstract":[{"type":"text","text":"The recipient"}],"kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Recipient","title":"Recipient","url":"\/documentation\/swifthpke\/recipient","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Recipient","kind":"identifier"}]},"doc://SwiftHPKE/documentation/SwiftHPKE/SecretExport":{"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/SecretExport","kind":"article","type":"topic","url":"\/documentation\/swifthpke\/secretexport","title":"Secret Export","abstract":[{"text":"Creating secret messages","type":"text"}],"role":"article"},"doc://SwiftHPKE/documentation/SwiftHPKE/Byte":{"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Byte"}],"navigatorTitle":[{"kind":"identifier","text":"Byte"}],"type":"topic","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Byte","role":"symbol","abstract":[{"text":"Unsigned 8 bit value","type":"text"}],"title":"Byte","url":"\/documentation\/swifthpke\/byte","kind":"symbol"},"doc://SwiftHPKE/documentation/SwiftHPKE/KEM":{"url":"\/documentation\/swifthpke\/kem","abstract":[{"type":"text","text":"The key encapsulation mechanisms"}],"type":"topic","title":"KEM","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/KEM","role":"symbol","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"KEM"}],"navigatorTitle":[{"kind":"identifier","text":"KEM"}]},"https://leif-ibsen.github.io/ASN1/documentation/asn1":{"type":"link","identifier":"https:\/\/leif-ibsen.github.io\/ASN1\/documentation\/asn1","titleInlineContent":[{"text":"ASN1","type":"text"}],"title":"ASN1","url":"https:\/\/leif-ibsen.github.io\/ASN1\/documentation\/asn1"},"https://leif-ibsen.github.io/Digest/documentation/digest":{"url":"https:\/\/leif-ibsen.github.io\/Digest\/documentation\/digest","title":"Digest","type":"link","titleInlineContent":[{"type":"text","text":"Digest"}],"identifier":"https:\/\/leif-ibsen.github.io\/Digest\/documentation\/digest"}}}