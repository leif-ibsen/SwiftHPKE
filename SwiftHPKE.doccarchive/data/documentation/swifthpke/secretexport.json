{"identifier":{"url":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/SecretExport","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"content","content":[{"type":"heading","level":2,"text":"","anchor":""},{"type":"paragraph","inlineContent":[{"text":"Given the recipientâ€™s public key, a sender can generate a secret that only the recipient can know.","type":"text"}]},{"text":"Example 1","level":3,"anchor":"Example-1","type":"heading"},{"type":"codeListing","syntax":"swift","code":["import SwiftHPKE","","\/\/ The aead need not be .EXPORTONLY, any aead will work","","let theSuite = CipherSuite(kem: .P256, kdf: .KDF256, aead: .EXPORTONLY)","let (recipientPubKey, recipientPrivKey) = try theSuite.makeKeyPair()","","\/\/ Generate the secret","","let (encapsulated, secret) = try theSuite.sendExport(publicKey: recipientPubKey, info: [], context: [1, 2, 3], L: 10)","print(\"Generated secret:\", secret)","","\/\/ The recipient retrieves the secret by means of the encapsulated key","","let retrievedSecret = try theSuite.receiveExport(privateKey: recipientPrivKey, info: [], context: [1, 2, 3], L: 10, encap: encapsulated)","print(\"Retrieved secret:\", retrievedSecret)"]},{"inlineContent":[{"text":"giving (for example):","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["Generated secret: [172, 169, 119, 121, 167, 53, 213, 12, 0, 29]","Retrieved secret: [172, 169, 119, 121, 167, 53, 213, 12, 0, 29]"],"syntax":"swift"},{"level":3,"anchor":"Example-2","type":"heading","text":"Example 2"},{"type":"codeListing","syntax":"swift","code":["import SwiftHPKE","","\/\/ The aead need not be .EXPORTONLY, any aead will work","","let theSuite = CipherSuite(kem: .P256, kdf: .KDF256, aead: .EXPORTONLY)","let (recipientPubKey, recipientPrivKey) = try theSuite.makeKeyPair()","let sender = try Sender(suite: theSuite, publicKey: recipientPubKey, info: [])","","\/\/ Generate the secret","","let secret = try sender.sendExport(context: [1, 2, 3], L: 10)","print(\"Generated secret:\", secret)","","\/\/ The recipient retrieves the secret by means of the encapsulated key","","let receiver = try Recipient(suite: theSuite, privateKey: recipientPrivKey, info: [], encap: sender.encapsulatedKey)","let retrievedSecret = try receiver.receiveExport(context: [1, 2, 3], L: 10)","print(\"Retrieved secret:\", retrievedSecret)"]},{"type":"paragraph","inlineContent":[{"text":"giving (for example):","type":"text"}]},{"code":["Generated secret: [3, 230, 139, 128, 86, 4, 81, 78, 110, 135]","Retrieved secret: [3, 230, 139, 128, 86, 4, 81, 78, 110, 135]"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"The above examples use Base mode. Preshared key mode, Authenticated mode and Authenticated, preshared key mode"},{"type":"text","text":" "},{"text":"is also possible.","type":"text"}],"type":"paragraph"}]}],"metadata":{"title":"Secret Export","modules":[{"name":"SwiftHPKE"}],"role":"article","roleHeading":"Article"},"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Usage","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Basics","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/CreateKeys","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/LoadKeys","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/EncryptDecrypt","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/CryptoKit","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Performance","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Dependencies","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/References"]}],"kind":"article","hierarchy":{"paths":[["doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE"]]},"variants":[{"paths":["\/documentation\/swifthpke\/secretexport"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"references":{"doc://SwiftHPKE/documentation/SwiftHPKE/Basics":{"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Basics","type":"topic","abstract":[],"role":"article","url":"\/documentation\/swifthpke\/basics","kind":"article","title":"Basics"},"doc://SwiftHPKE/documentation/SwiftHPKE/EncryptDecrypt":{"url":"\/documentation\/swifthpke\/encryptdecrypt","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/EncryptDecrypt","abstract":[],"title":"Encryption and Decryption","kind":"article","type":"topic","role":"article"},"doc://SwiftHPKE/documentation/SwiftHPKE":{"title":"SwiftHPKE","role":"collection","abstract":[],"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE","url":"\/documentation\/swifthpke","type":"topic","kind":"symbol"},"doc://SwiftHPKE/documentation/SwiftHPKE/CreateKeys":{"type":"topic","kind":"article","title":"Creating Public and Private Keys","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/CreateKeys","abstract":[],"url":"\/documentation\/swifthpke\/createkeys","role":"article"},"doc://SwiftHPKE/documentation/SwiftHPKE/Dependencies":{"abstract":[],"kind":"article","title":"Dependencies","url":"\/documentation\/swifthpke\/dependencies","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Dependencies","role":"article","type":"topic"},"doc://SwiftHPKE/documentation/SwiftHPKE/LoadKeys":{"url":"\/documentation\/swifthpke\/loadkeys","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/LoadKeys","role":"article","kind":"article","abstract":[],"type":"topic","title":"Loading Existing Keys"},"doc://SwiftHPKE/documentation/SwiftHPKE/References":{"url":"\/documentation\/swifthpke\/references","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/References","abstract":[],"title":"References","kind":"article","type":"topic","role":"article"},"doc://SwiftHPKE/documentation/SwiftHPKE/Performance":{"url":"\/documentation\/swifthpke\/performance","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Performance","role":"article","kind":"article","abstract":[],"type":"topic","title":"Performance"},"doc://SwiftHPKE/documentation/SwiftHPKE/Usage":{"url":"\/documentation\/swifthpke\/usage","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Usage","role":"article","kind":"article","abstract":[],"type":"topic","title":"Usage"},"doc://SwiftHPKE/documentation/SwiftHPKE/CryptoKit":{"abstract":[],"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/CryptoKit","title":"Apple CryptoKit Compatibility","type":"topic","role":"article","url":"\/documentation\/swifthpke\/cryptokit","kind":"article"}}}