{"metadata":{"roleHeading":"Article","modules":[{"name":"SwiftHPKE"}],"title":"Secret Export","role":"article"},"sections":[],"primaryContentSections":[{"kind":"content","content":[{"level":2,"type":"heading","text":"","anchor":""},{"type":"paragraph","inlineContent":[{"text":"Given the recipientâ€™s public key, a sender can generate a secret that only the recipient can know.","type":"text"}]},{"anchor":"Example-1","level":3,"type":"heading","text":"Example 1"},{"syntax":"Swift","code":["import SwiftHPKE","","\/\/ The aead need not be .EXPORTONLY, any aead will work","","let theSuite = CipherSuite(kem: .P256, kdf: .KDF256, aead: .EXPORTONLY)","let (recipientPubKey, recipientPrivKey) = try theSuite.makeKeyPair()","","\/\/ Generate the secret","","let (encapsulated, secret) = try theSuite.sendExport(publicKey: recipientPubKey, info: [], context: [1, 2, 3], L: 10)","print(\"Generated secret:\", secret)","","\/\/ The recipient retrieves the secret by means of the encapsulated key","","let retrievedSecret = try theSuite.receiveExport(privateKey: recipientPrivKey, info: [], context: [1, 2, 3], L: 10, encap: encapsulated)","print(\"Retrieved secret:\", retrievedSecret)"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"giving (for example):","type":"text"}]},{"type":"codeListing","syntax":"Swift","code":["Generated secret: [172, 169, 119, 121, 167, 53, 213, 12, 0, 29]","Retrieved secret: [172, 169, 119, 121, 167, 53, 213, 12, 0, 29]"]},{"anchor":"Example-2","type":"heading","text":"Example 2","level":3},{"code":["import SwiftHPKE","","\/\/ The aead need not be .EXPORTONLY, any aead will work","","let theSuite = CipherSuite(kem: .P256, kdf: .KDF256, aead: .EXPORTONLY)","let (recipientPubKey, recipientPrivKey) = try theSuite.makeKeyPair()","let sender = try Sender(suite: theSuite, publicKey: recipientPubKey, info: [])","","\/\/ Generate the secret","","let secret = try sender.sendExport(context: [1, 2, 3], L: 10)","print(\"Generated secret:\", secret)","","\/\/ The recipient retrieves the secret by means of the encapsulated key","","let receiver = try Recipient(suite: theSuite, privateKey: recipientPrivKey, info: [], encap: sender.encapsulatedKey)","let retrievedSecret = try receiver.receiveExport(context: [1, 2, 3], L: 10)","print(\"Retrieved secret:\", retrievedSecret)"],"type":"codeListing","syntax":"Swift"},{"inlineContent":[{"type":"text","text":"giving (for example):"}],"type":"paragraph"},{"code":["Generated secret: [3, 230, 139, 128, 86, 4, 81, 78, 110, 135]","Retrieved secret: [3, 230, 139, 128, 86, 4, 81, 78, 110, 135]"],"type":"codeListing","syntax":"Swift"},{"type":"paragraph","inlineContent":[{"text":"The above examples use Base mode. Preshared key mode, Authenticated mode and Authenticated, preshared key mode","type":"text"},{"type":"text","text":" "},{"type":"text","text":"is also possible."}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swifthpke\/secretexport"]}],"identifier":{"url":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/SecretExport","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"article","hierarchy":{"paths":[["doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE"]]},"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Usage","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Basics","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/CreateKeys","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/LoadKeys","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/EncryptDecrypt","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/CryptoKit","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Performance","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Dependencies","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/References"]}],"references":{"doc://SwiftHPKE/documentation/SwiftHPKE/LoadKeys":{"role":"article","kind":"article","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/LoadKeys","type":"topic","url":"\/documentation\/swifthpke\/loadkeys","abstract":[],"title":"Loading Existing Keys"},"doc://SwiftHPKE/documentation/SwiftHPKE/References":{"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/References","kind":"article","type":"topic","role":"article","title":"References","url":"\/documentation\/swifthpke\/references","abstract":[]},"doc://SwiftHPKE/documentation/SwiftHPKE/Basics":{"type":"topic","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Basics","url":"\/documentation\/swifthpke\/basics","kind":"article","title":"Basics","role":"article","abstract":[]},"doc://SwiftHPKE/documentation/SwiftHPKE/Dependencies":{"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Dependencies","abstract":[],"kind":"article","role":"article","title":"Dependencies","type":"topic","url":"\/documentation\/swifthpke\/dependencies"},"doc://SwiftHPKE/documentation/SwiftHPKE/Usage":{"kind":"article","url":"\/documentation\/swifthpke\/usage","role":"article","type":"topic","title":"Usage","abstract":[],"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Usage"},"doc://SwiftHPKE/documentation/SwiftHPKE/CreateKeys":{"role":"article","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/CreateKeys","kind":"article","type":"topic","title":"Creating Public and Private Keys","abstract":[],"url":"\/documentation\/swifthpke\/createkeys"},"doc://SwiftHPKE/documentation/SwiftHPKE/Performance":{"type":"topic","kind":"article","url":"\/documentation\/swifthpke\/performance","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Performance","title":"Performance","role":"article","abstract":[]},"doc://SwiftHPKE/documentation/SwiftHPKE/CryptoKit":{"type":"topic","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/CryptoKit","url":"\/documentation\/swifthpke\/cryptokit","kind":"article","role":"article","title":"Apple CryptoKit Compatibility","abstract":[]},"doc://SwiftHPKE/documentation/SwiftHPKE/EncryptDecrypt":{"abstract":[],"url":"\/documentation\/swifthpke\/encryptdecrypt","title":"Encryption and Decryption","role":"article","kind":"article","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/EncryptDecrypt","type":"topic"},"doc://SwiftHPKE/documentation/SwiftHPKE":{"kind":"symbol","role":"collection","url":"\/documentation\/swifthpke","title":"SwiftHPKE","abstract":[],"type":"topic","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE"}}}