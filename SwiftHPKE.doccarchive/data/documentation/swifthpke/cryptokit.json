{"sections":[],"metadata":{"modules":[{"name":"SwiftHPKE"}],"title":"CryptoKit Compatibility","roleHeading":"Article","role":"article"},"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/CryptoKit","interfaceLanguage":"swift"},"abstract":[{"text":"SwiftHPKE is compatible with Appleâ€™s CryptoKit framework","type":"text"}],"seeAlsoSections":[{"anchor":"Additional-Information","title":"Additional Information","identifiers":["doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/KeyManagement","doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/SecretExport","doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/Performance","doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/References"],"generated":true}],"primaryContentSections":[{"content":[{"type":"heading","anchor":"","level":2,"text":""},{"type":"paragraph","inlineContent":[{"type":"text","text":"The SwiftHPKE keys of type "},{"type":"codeVoice","code":".P256"},{"type":"text","text":", "},{"type":"codeVoice","code":".P384"},{"type":"text","text":", "},{"type":"codeVoice","code":".P521"},{"type":"text","text":" and "},{"type":"codeVoice","code":".X25519"},{"type":"text","text":" correspond to CryptoKit keys of type "},{"type":"codeVoice","code":"P256"},{"type":"text","text":", "},{"type":"codeVoice","code":"P384"},{"type":"text","text":", "},{"type":"codeVoice","code":"P521"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Curve25519"},{"type":"text","text":". Keys of type "},{"type":"codeVoice","code":".X448"},{"type":"text","text":" is not supported in CryptoKit."}]},{"type":"paragraph","inlineContent":[{"text":"To convert CryptoKit ","type":"text"},{"type":"codeVoice","code":"P256"},{"text":" keys (similarly for ","type":"text"},{"type":"codeVoice","code":"P384"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"P521"},{"text":") - say ","type":"text"},{"type":"codeVoice","code":"ckPriv"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"ckPub"},{"text":" to SwiftHPKE keys:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["let hpkePriv = try PrivateKey(der: Bytes(ckPriv.derRepresentation))","let hpkePub = try PublicKey(der: Bytes(ckPub.derRepresentation))"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To convert CryptoKit "},{"type":"codeVoice","code":"Curve25519"},{"type":"text","text":" keys - say "},{"type":"codeVoice","code":"ckPriv"},{"type":"text","text":" and "},{"type":"codeVoice","code":"ckPub"},{"type":"text","text":" to SwiftHPKE keys:"}]},{"type":"codeListing","syntax":"swift","code":["let hpkePriv = try PrivateKey(kem: .X25519, bytes: Bytes(ckPriv.rawRepresentation))","let hpkePub = try PublicKey(kem: .X25519, bytes: Bytes(ckPub.rawRepresentation))"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To convert SwiftHPKE "},{"type":"codeVoice","code":".P256"},{"type":"text","text":" keys (similarly for "},{"type":"codeVoice","code":".P384"},{"type":"text","text":" and "},{"type":"codeVoice","code":".P521"},{"type":"text","text":") - say "},{"type":"codeVoice","code":"hpkePriv"},{"type":"text","text":" and "},{"type":"codeVoice","code":"hpkePub"},{"type":"text","text":" to CryptoKit keys:"}]},{"type":"codeListing","syntax":"swift","code":["let ckPriv = try CryptoKit.P256.KeyAgreement.PrivateKey(derRepresentation: hpkePriv.der)","let ckPub = try CryptoKit.P256.KeyAgreement.PublicKey(derRepresentation: hpkePub.der)"]},{"type":"paragraph","inlineContent":[{"text":"To convert SwiftHPKE ","type":"text"},{"code":".X25519","type":"codeVoice"},{"text":" keys - say ","type":"text"},{"code":"hpkePriv","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"hpkePub","type":"codeVoice"},{"text":" to CryptoKit keys:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["let ckPriv = try CryptoKit.Curve25519.KeyAgreement.PrivateKey(rawRepresentation: hpkePriv.bytes)","let ckPub = try CryptoKit.Curve25519.KeyAgreement.PublicKey(rawRepresentation: hpkePub.bytes)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Messages sealed by CryptoKit in Base mode, Preshared Key mode, Authenticated mode or Authenticated, Preshared Key mode"},{"type":"text","text":" "},{"type":"text","text":"can be opened by SwiftHPKE in the same mode using the SwiftHPKE version of the keys."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Likewise, messages sealed by SwiftHPKE in Base mode, Preshared Key mode, Authenticated mode or Authenticated, Preshared Key mode"},{"type":"text","text":" "},{"type":"text","text":"can be opened by CryptoKit in the same mode using the CryptoKit version of the keys."}]}],"kind":"content"}],"kind":"article","variants":[{"paths":["\/documentation\/swifthpke\/cryptokit"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE"]]},"references":{"doc://swifthpke.SwiftHPKE/documentation/SwiftHPKE/SecretExport":{"type":"topic","title":"Secret Export","url":"\/documentation\/swifthpke\/secretexport","kind":"article","identifier":"doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/SecretExport","abstract":[{"type":"text","text":"Creating secret messages"}],"role":"article"},"doc://swifthpke.SwiftHPKE/documentation/SwiftHPKE/Performance":{"url":"\/documentation\/swifthpke\/performance","abstract":[{"type":"text","text":"Encryption and decryption speed"}],"identifier":"doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/Performance","title":"Performance","type":"topic","kind":"article","role":"article"},"doc://swifthpke.SwiftHPKE/documentation/SwiftHPKE/References":{"kind":"article","type":"topic","url":"\/documentation\/swifthpke\/references","identifier":"doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/References","title":"References","abstract":[{"type":"text","text":"Algorithms from the following books and papers have been used in the implementation"}],"role":"article"},"doc://swifthpke.SwiftHPKE/documentation/SwiftHPKE":{"kind":"symbol","abstract":[{"type":"text","text":"Hybrid Public Key Encryption"}],"role":"collection","type":"topic","title":"SwiftHPKE","url":"\/documentation\/swifthpke","identifier":"doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE"},"doc://swifthpke.SwiftHPKE/documentation/SwiftHPKE/KeyManagement":{"url":"\/documentation\/swifthpke\/keymanagement","abstract":[{"type":"text","text":"Creating new keys and loading exsisting keys"}],"identifier":"doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/KeyManagement","type":"topic","title":"Key Management","kind":"article","role":"article"}}}