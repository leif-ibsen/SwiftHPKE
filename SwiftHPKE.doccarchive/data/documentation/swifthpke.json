{"topicSections":[{"identifiers":["doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/Recipient","doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/Sender"],"anchor":"Classes","title":"Classes"},{"identifiers":["doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/CipherSuite","doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/PrivateKey","doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/PublicKey"],"anchor":"Structures","title":"Structures"},{"identifiers":["doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/Byte","doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/Bytes"],"anchor":"Type-Aliases","title":"Type Aliases"},{"identifiers":["doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/AEAD","doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/KDF","doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/KEM","doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/HPKEException"],"anchor":"Enumerations","title":"Enumerations"},{"identifiers":["doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/KeyManagement","doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/SecretExport","doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/CryptoKit","doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/Performance","doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/References"],"anchor":"Additional-Information","title":"Additional Information"}],"primaryContentSections":[{"content":[{"text":"Overview","type":"heading","level":2,"anchor":"Overview"},{"inlineContent":[{"text":"SwiftHPKE implements the Hybrid Public Key Encryption standard as defined in [RFC 9180].","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The basic concepts in SwiftHPKE are "},{"type":"codeVoice","code":"CipherSuite"},{"type":"text","text":", "},{"type":"codeVoice","code":"Sender"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Recipient"},{"type":"text","text":", represented by the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/CipherSuite"},{"type":"text","text":" structure and the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/Sender"},{"type":"text","text":" and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/Recipient"},{"type":"text","text":" classes."}],"type":"paragraph"},{"inlineContent":[{"text":"A CipherSuite combines a ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"Key Encapsulation Mechanism"}]},{"text":" (","type":"text"},{"identifier":"doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/KEM","isActive":true,"type":"reference"},{"text":"), a ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"Key Derivation Function","type":"text"}]},{"text":" (","type":"text"},{"identifier":"doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/KDF","isActive":true,"type":"reference"},{"text":")","type":"text"},{"text":" ","type":"text"},{"text":"and a ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"Authenticated Encryption with Associated Data","type":"text"}]},{"text":" (","type":"text"},{"identifier":"doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/AEAD","isActive":true,"type":"reference"},{"text":") algorithm.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"There are 5 different KEM’s, 3 different KDF’s and 4 different AEAD’s giving 60 CipherSuite combinations."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Encryption and decryption takes place in one of four modes:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Base mode"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Preshared key mode"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Authenticated mode"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Authenticated, preshared key mode"}],"type":"paragraph"}]}]},{"text":"Stateless Single-shot API","level":3,"type":"heading","anchor":"Stateless-Single-shot-API"},{"type":"paragraph","inlineContent":[{"text":"A ","type":"text"},{"code":"CipherSuite","type":"codeVoice"},{"text":" instance can encrypt (seal) a single plaintext message and decrypt (open) a single","type":"text"},{"text":" ","type":"text"},{"text":"ciphertext message without the need for a ","type":"text"},{"code":"Sender","type":"codeVoice"},{"text":" instance and a ","type":"text"},{"code":"Recipient","type":"codeVoice"},{"text":" instance.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Example"}]}]},{"code":["\/\/ Encryption and decryption of a single message in base mode","","import SwiftHPKE","","\/\/ The CipherSuite to use","let theSuite = CipherSuite(kem: .X448, kdf: .KDF512, aead: .AESGCM256)","","\/\/ The recipient keys","let (recipientPub, recipientPriv) = try theSuite.makeKeyPair()","","let plainText = Bytes(\"Hi, there\".utf8)","let (encapsulatedKey, cipherText) = try theSuite.seal(publicKey: recipientPub, info: [1, 2, 3], pt: plainText, aad: [4, 5, 6])","let decrypted = try theSuite.open(privateKey: recipientPriv, info: [1, 2, 3], ct: cipherText, aad: [4, 5, 6], encap: encapsulatedKey)","print(String(bytes: decrypted, encoding: .utf8)!)"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"giving:","type":"text"}]},{"code":["Hi, there"],"type":"codeListing","syntax":"swift"},{"text":"Stateful Multi-message API","level":3,"type":"heading","anchor":"Stateful-Multi-message-API"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Sender"},{"type":"text","text":" is based on a specific "},{"type":"codeVoice","code":"CipherSuite"},{"type":"text","text":" and a "},{"type":"codeVoice","code":"Sender"},{"type":"text","text":" instance can encrypt (seal)"},{"type":"text","text":" "},{"type":"text","text":"a sequence of plaintexts in one of the four modes shown above."}]},{"type":"paragraph","inlineContent":[{"text":"A ","type":"text"},{"code":"Recipient","type":"codeVoice"},{"text":" is also based on a specific ","type":"text"},{"code":"CipherSuite","type":"codeVoice"},{"text":" and a ","type":"text"},{"code":"Recipient","type":"codeVoice"},{"text":" instance can decrypt (open)","type":"text"},{"text":" ","type":"text"},{"text":"a sequence of ciphertexts in the four modes.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Example","type":"text"}]}]},{"code":["\/\/ Encryption and decryption of several messages in authenticated mode","","import SwiftHPKE","","\/\/ The CipherSuite to use","let theSuite = CipherSuite(kem: .P384, kdf: .KDF384, aead: .CHACHAPOLY)","","let plainText1 = Bytes(\"Hi, there 1\".utf8)","let plainText2 = Bytes(\"Hi, there 2\".utf8)","let plainText3 = Bytes(\"Hi, there 3\".utf8)","","\/\/ The Sender and Recipient keys","let (senderPub, senderPriv) = try theSuite.makeKeyPair()","let (recipientPub, recipientPriv) = try theSuite.makeKeyPair()","","\/\/ Create the Sender instance","let sender = try Sender(suite: theSuite, publicKey: recipientPub, info: [1, 2, 3], authentication: senderPriv)","","let cipherText1 = try sender.seal(pt: plainText1, aad: [4, 5])","let cipherText2 = try sender.seal(pt: plainText2, aad: [6, 7])","let cipherText3 = try sender.seal(pt: plainText3, aad: [8, 9])","","\/\/ Create the Recipient instance","let recipient = try Recipient(suite: theSuite, privateKey: recipientPriv, info: [1, 2, 3], authentication: senderPub, encap: sender.encapsulatedKey)","","let decrypted1 = try recipient.open(ct: cipherText1, aad: [4, 5])","let decrypted2 = try recipient.open(ct: cipherText2, aad: [6, 7])","let decrypted3 = try recipient.open(ct: cipherText3, aad: [8, 9])","","print(String(bytes: decrypted1, encoding: .utf8)!)","print(String(bytes: decrypted2, encoding: .utf8)!)","print(String(bytes: decrypted3, encoding: .utf8)!)"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"giving:","type":"text"}]},{"code":["Hi, there 1","Hi, there 2","Hi, there 3"],"type":"codeListing","syntax":"swift"},{"style":"important","name":"Important","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"text","text":" "},{"type":"text","text":"The messages must be decrypted in the order in which they were encrypted."}]}]},{"text":"Usage","level":3,"type":"heading","anchor":"Usage"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To use SwiftHPKE, in your project "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Package.swift"}]},{"type":"text","text":" file add a dependency like"}]},{"code":["dependencies: [","  .package(url: \"https:\/\/github.com\/leif-ibsen\/SwiftHPKE\", from: \"2.8.0\"),","]"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"SwiftHPKE itself depends on the ","type":"text"},{"identifier":"https:\/\/leif-ibsen.github.io\/ASN1\/documentation\/asn1","isActive":true,"type":"reference"},{"text":", ","type":"text"},{"identifier":"https:\/\/leif-ibsen.github.io\/BigInt\/documentation\/bigint","isActive":true,"type":"reference"},{"text":" and ","type":"text"},{"identifier":"https:\/\/leif-ibsen.github.io\/Digest\/documentation\/digest","isActive":true,"type":"reference"},{"text":" packages","type":"text"}]},{"code":["dependencies: [","  .package(url: \"https:\/\/github.com\/leif-ibsen\/ASN1\", from: \"2.7.0\"),","  .package(url: \"https:\/\/github.com\/leif-ibsen\/BigInt\", from: \"1.21.0\"),","  .package(url: \"https:\/\/github.com\/leif-ibsen\/Digest\", from: \"1.13.0\"),","],"],"type":"codeListing","syntax":"swift"},{"style":"important","name":"Important","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"text","text":" "},{"type":"text","text":"SwiftHPKE requires Swift 5.0. It also requires that the "},{"code":"Int","type":"codeVoice"},{"type":"text","text":" and "},{"code":"UInt","type":"codeVoice"},{"type":"text","text":" types be 64 bit types."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"SwiftHPKE uses Apple’s CryptoKit framework. Therefore, for macOS the version must be at least 10.15,"},{"type":"text","text":" "},{"type":"text","text":"for iOS the version must be at least 13, and for watchOS the version must be at least 8."}]}]}],"kind":"content"}],"metadata":{"symbolKind":"module","role":"collection","modules":[{"name":"SwiftHPKE"}],"roleHeading":"Framework","title":"SwiftHPKE","externalID":"SwiftHPKE"},"identifier":{"url":"doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE","interfaceLanguage":"swift"},"sections":[],"hierarchy":{"paths":[[]]},"variants":[{"paths":["\/documentation\/swifthpke"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"type":"text","text":"Hybrid Public Key Encryption"}],"kind":"symbol","references":{"doc://swifthpke.SwiftHPKE/documentation/SwiftHPKE/Bytes":{"abstract":[{"text":"Array of unsigned 8 bit values","type":"text"}],"kind":"symbol","url":"\/documentation\/swifthpke\/bytes","navigatorTitle":[{"text":"Bytes","kind":"identifier"}],"title":"Bytes","identifier":"doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/Bytes","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Bytes","kind":"identifier"}],"type":"topic"},"doc://swifthpke.SwiftHPKE/documentation/SwiftHPKE/SecretExport":{"type":"topic","title":"Secret Export","url":"\/documentation\/swifthpke\/secretexport","kind":"article","identifier":"doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/SecretExport","abstract":[{"type":"text","text":"Creating secret messages"}],"role":"article"},"doc://swifthpke.SwiftHPKE/documentation/SwiftHPKE/PrivateKey":{"title":"PrivateKey","type":"topic","url":"\/documentation\/swifthpke\/privatekey","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrivateKey","kind":"identifier"}],"navigatorTitle":[{"text":"PrivateKey","kind":"identifier"}],"abstract":[{"type":"text","text":"The private key"}],"identifier":"doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/PrivateKey","role":"symbol"},"doc://swifthpke.SwiftHPKE/documentation/SwiftHPKE/KEM":{"navigatorTitle":[{"text":"KEM","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"KEM","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"The key encapsulation mechanisms"}],"kind":"symbol","identifier":"doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/KEM","type":"topic","url":"\/documentation\/swifthpke\/kem","title":"KEM"},"doc://swifthpke.SwiftHPKE/documentation/SwiftHPKE/Byte":{"type":"topic","identifier":"doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/Byte","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Byte","kind":"identifier"}],"abstract":[{"type":"text","text":"Unsigned 8 bit value"}],"title":"Byte","navigatorTitle":[{"kind":"identifier","text":"Byte"}],"url":"\/documentation\/swifthpke\/byte","kind":"symbol","role":"symbol"},"https://leif-ibsen.github.io/Digest/documentation/digest":{"type":"link","titleInlineContent":[{"type":"text","text":"Digest"}],"url":"https:\/\/leif-ibsen.github.io\/Digest\/documentation\/digest","identifier":"https:\/\/leif-ibsen.github.io\/Digest\/documentation\/digest","title":"Digest"},"doc://swifthpke.SwiftHPKE/documentation/SwiftHPKE/HPKEException":{"navigatorTitle":[{"kind":"identifier","text":"HPKEException"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"HPKEException"}],"role":"symbol","abstract":[{"text":"The HPKE exceptions","type":"text"}],"kind":"symbol","identifier":"doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/HPKEException","type":"topic","title":"HPKEException","url":"\/documentation\/swifthpke\/hpkeexception"},"doc://swifthpke.SwiftHPKE/documentation/SwiftHPKE/CryptoKit":{"type":"topic","identifier":"doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/CryptoKit","abstract":[{"type":"text","text":"SwiftHPKE is compatible with Apple’s CryptoKit framework"}],"title":"CryptoKit Compatibility","kind":"article","url":"\/documentation\/swifthpke\/cryptokit","role":"article"},"doc://swifthpke.SwiftHPKE/documentation/SwiftHPKE/Recipient":{"title":"Recipient","abstract":[{"text":"The recipient","type":"text"}],"url":"\/documentation\/swifthpke\/recipient","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Recipient"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/Recipient","navigatorTitle":[{"kind":"identifier","text":"Recipient"}],"type":"topic"},"https://leif-ibsen.github.io/BigInt/documentation/bigint":{"type":"link","titleInlineContent":[{"type":"text","text":"BigInt"}],"url":"https:\/\/leif-ibsen.github.io\/BigInt\/documentation\/bigint","identifier":"https:\/\/leif-ibsen.github.io\/BigInt\/documentation\/bigint","title":"BigInt"},"doc://swifthpke.SwiftHPKE/documentation/SwiftHPKE":{"kind":"symbol","abstract":[{"type":"text","text":"Hybrid Public Key Encryption"}],"role":"collection","type":"topic","title":"SwiftHPKE","url":"\/documentation\/swifthpke","identifier":"doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE"},"https://leif-ibsen.github.io/ASN1/documentation/asn1":{"url":"https:\/\/leif-ibsen.github.io\/ASN1\/documentation\/asn1","identifier":"https:\/\/leif-ibsen.github.io\/ASN1\/documentation\/asn1","type":"link","title":"ASN1","titleInlineContent":[{"type":"text","text":"ASN1"}]},"doc://swifthpke.SwiftHPKE/documentation/SwiftHPKE/KeyManagement":{"url":"\/documentation\/swifthpke\/keymanagement","abstract":[{"type":"text","text":"Creating new keys and loading exsisting keys"}],"identifier":"doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/KeyManagement","type":"topic","title":"Key Management","kind":"article","role":"article"},"doc://swifthpke.SwiftHPKE/documentation/SwiftHPKE/KDF":{"kind":"symbol","abstract":[{"type":"text","text":"The key derivation functions"}],"role":"symbol","type":"topic","title":"KDF","url":"\/documentation\/swifthpke\/kdf","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"KDF","kind":"identifier"}],"identifier":"doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/KDF","navigatorTitle":[{"text":"KDF","kind":"identifier"}]},"doc://swifthpke.SwiftHPKE/documentation/SwiftHPKE/PublicKey":{"type":"topic","identifier":"doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/PublicKey","title":"PublicKey","kind":"symbol","url":"\/documentation\/swifthpke\/publickey","role":"symbol","abstract":[{"text":"The public key","type":"text"}],"navigatorTitle":[{"text":"PublicKey","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PublicKey","kind":"identifier"}]},"doc://swifthpke.SwiftHPKE/documentation/SwiftHPKE/AEAD":{"navigatorTitle":[{"kind":"identifier","text":"AEAD"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AEAD"}],"role":"symbol","abstract":[{"text":"The AEAD encryption algorithms","type":"text"}],"kind":"symbol","identifier":"doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/AEAD","type":"topic","title":"AEAD","url":"\/documentation\/swifthpke\/aead"},"doc://swifthpke.SwiftHPKE/documentation/SwiftHPKE/Performance":{"url":"\/documentation\/swifthpke\/performance","abstract":[{"type":"text","text":"Encryption and decryption speed"}],"identifier":"doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/Performance","title":"Performance","type":"topic","kind":"article","role":"article"},"doc://swifthpke.SwiftHPKE/documentation/SwiftHPKE/Sender":{"kind":"symbol","url":"\/documentation\/swifthpke\/sender","type":"topic","identifier":"doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/Sender","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Sender","kind":"identifier"}],"navigatorTitle":[{"text":"Sender","kind":"identifier"}],"title":"Sender","abstract":[{"type":"text","text":"The sender"}],"role":"symbol"},"doc://swifthpke.SwiftHPKE/documentation/SwiftHPKE/References":{"kind":"article","type":"topic","url":"\/documentation\/swifthpke\/references","identifier":"doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/References","title":"References","abstract":[{"type":"text","text":"Algorithms from the following books and papers have been used in the implementation"}],"role":"article"},"doc://swifthpke.SwiftHPKE/documentation/SwiftHPKE/CipherSuite":{"kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/swifthpke\/ciphersuite","identifier":"doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/CipherSuite","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CipherSuite","kind":"identifier"}],"title":"CipherSuite","abstract":[{"type":"text","text":"The cipher suite"}],"navigatorTitle":[{"text":"CipherSuite","kind":"identifier"}]}}}