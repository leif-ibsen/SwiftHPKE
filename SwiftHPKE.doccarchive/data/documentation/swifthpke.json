{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE"},"abstract":[{"type":"text","text":"Hybrid Public Key Encryption"}],"primaryContentSections":[{"content":[{"anchor":"Overview","level":2,"text":"Overview","type":"heading"},{"inlineContent":[{"text":"SwiftHPKE implements the Hybrid Public Key Encryption standard as defined in [RFC 9180].","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"The basic concepts in SwiftHPKE are ","type":"text"},{"code":"CipherSuite","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Sender","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Recipient","type":"codeVoice"},{"text":", represented by the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/CipherSuite","type":"reference"},{"text":" structure and the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/Sender","type":"reference"},{"text":" and ","type":"text"},{"isActive":true,"identifier":"doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/Recipient","type":"reference"},{"text":" classes.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"A CipherSuite combines a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Key Encapsulation Mechanism"}]},{"type":"text","text":" ("},{"type":"reference","identifier":"doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/KEM","isActive":true},{"type":"text","text":"), a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Key Derivation Function"}]},{"type":"text","text":" ("},{"type":"reference","identifier":"doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/KDF","isActive":true},{"type":"text","text":")"},{"type":"text","text":" "},{"type":"text","text":"and a "},{"type":"emphasis","inlineContent":[{"text":"Authenticated Encryption with Associated Data","type":"text"}]},{"type":"text","text":" ("},{"type":"reference","identifier":"doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/AEAD","isActive":true},{"type":"text","text":") algorithm."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"There are 5 different KEM’s, 3 different KDF’s and 4 different AEAD’s giving 60 CipherSuite combinations."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Encryption and decryption takes place in one of four modes:"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Base mode"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Preshared key mode","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Authenticated mode","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Authenticated, preshared key mode"}]}]}],"type":"unorderedList"},{"anchor":"Stateless-Single-shot-API","level":3,"text":"Stateless Single-shot API","type":"heading"},{"inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"CipherSuite"},{"type":"text","text":" instance can encrypt (seal) a single plaintext message and decrypt (open) a single"},{"type":"text","text":" "},{"type":"text","text":"ciphertext message without the need for a "},{"type":"codeVoice","code":"Sender"},{"type":"text","text":" instance and a "},{"type":"codeVoice","code":"Recipient"},{"type":"text","text":" instance."}],"type":"paragraph"},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Example","type":"text"}]}],"type":"paragraph"},{"syntax":"swift","code":["\/\/ Encryption and decryption of a single message in base mode","","import SwiftHPKE","","\/\/ The CipherSuite to use","let theSuite = CipherSuite(kem: .X448, kdf: .KDF512, aead: .AESGCM256)","","\/\/ The recipient keys","let (recipientPub, recipientPriv) = try theSuite.makeKeyPair()","","let plainText = Bytes(\"Hi, there\".utf8)","let (encapsulatedKey, cipherText) = try theSuite.seal(publicKey: recipientPub, info: [1, 2, 3], pt: plainText, aad: [4, 5, 6])","let decrypted = try theSuite.open(privateKey: recipientPriv, info: [1, 2, 3], ct: cipherText, aad: [4, 5, 6], encap: encapsulatedKey)","print(String(bytes: decrypted, encoding: .utf8)!)"],"type":"codeListing"},{"inlineContent":[{"text":"giving:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["Hi, there"],"type":"codeListing"},{"anchor":"Stateful-Multi-message-API","level":3,"text":"Stateful Multi-message API","type":"heading"},{"inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Sender"},{"type":"text","text":" is based on a specific "},{"type":"codeVoice","code":"CipherSuite"},{"type":"text","text":" and a "},{"type":"codeVoice","code":"Sender"},{"type":"text","text":" instance can encrypt (seal)"},{"type":"text","text":" "},{"type":"text","text":"a sequence of plaintexts in one of the four modes shown above."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Recipient"},{"type":"text","text":" is also based on a specific "},{"type":"codeVoice","code":"CipherSuite"},{"type":"text","text":" and a "},{"type":"codeVoice","code":"Recipient"},{"type":"text","text":" instance can decrypt (open)"},{"type":"text","text":" "},{"type":"text","text":"a sequence of ciphertexts in the four modes."}],"type":"paragraph"},{"inlineContent":[{"inlineContent":[{"type":"text","text":"Example"}],"type":"strong"}],"type":"paragraph"},{"syntax":"swift","code":["\/\/ Encryption and decryption of several messages in authenticated mode","","import SwiftHPKE","","\/\/ The CipherSuite to use","let theSuite = CipherSuite(kem: .P384, kdf: .KDF384, aead: .CHACHAPOLY)","","let plainText1 = Bytes(\"Hi, there 1\".utf8)","let plainText2 = Bytes(\"Hi, there 2\".utf8)","let plainText3 = Bytes(\"Hi, there 3\".utf8)","","\/\/ The Sender and Recipient keys","let (senderPub, senderPriv) = try theSuite.makeKeyPair()","let (recipientPub, recipientPriv) = try theSuite.makeKeyPair()","","\/\/ Create the Sender instance","let sender = try Sender(suite: theSuite, publicKey: recipientPub, info: [1, 2, 3], authentication: senderPriv)","","let cipherText1 = try sender.seal(pt: plainText1, aad: [4, 5])","let cipherText2 = try sender.seal(pt: plainText2, aad: [6, 7])","let cipherText3 = try sender.seal(pt: plainText3, aad: [8, 9])","","\/\/ Create the Recipient instance","let recipient = try Recipient(suite: theSuite, privateKey: recipientPriv, info: [1, 2, 3], authentication: senderPub, encap: sender.encapsulatedKey)","","let decrypted1 = try recipient.open(ct: cipherText1, aad: [4, 5])","let decrypted2 = try recipient.open(ct: cipherText2, aad: [6, 7])","let decrypted3 = try recipient.open(ct: cipherText3, aad: [8, 9])","","print(String(bytes: decrypted1, encoding: .utf8)!)","print(String(bytes: decrypted2, encoding: .utf8)!)","print(String(bytes: decrypted3, encoding: .utf8)!)"],"type":"codeListing"},{"inlineContent":[{"text":"giving:","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["Hi, there 1","Hi, there 2","Hi, there 3"],"type":"codeListing"},{"content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"text":" ","type":"text"},{"text":"The messages must be decrypted in the order in which they were encrypted.","type":"text"}]}],"style":"important","name":"Important","type":"aside"},{"anchor":"Usage","level":3,"text":"Usage","type":"heading"},{"inlineContent":[{"type":"text","text":"To use SwiftHPKE, in your project "},{"type":"emphasis","inlineContent":[{"text":"Package.swift","type":"text"}]},{"type":"text","text":" file add a dependency like"}],"type":"paragraph"},{"syntax":"swift","code":["dependencies: [","  .package(url: \"https:\/\/github.com\/leif-ibsen\/SwiftHPKE\", from: \"2.7.0\"),","]"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"SwiftHPKE itself depends on the "},{"type":"reference","identifier":"https:\/\/leif-ibsen.github.io\/ASN1\/documentation\/asn1","isActive":true},{"type":"text","text":", "},{"type":"reference","identifier":"https:\/\/leif-ibsen.github.io\/BigInt\/documentation\/bigint","isActive":true},{"type":"text","text":" and "},{"type":"reference","identifier":"https:\/\/leif-ibsen.github.io\/Digest\/documentation\/digest","isActive":true},{"type":"text","text":" packages"}],"type":"paragraph"},{"syntax":"swift","code":["dependencies: [","  .package(url: \"https:\/\/github.com\/leif-ibsen\/ASN1\", from: \"2.7.0\"),","  .package(url: \"https:\/\/github.com\/leif-ibsen\/BigInt\", from: \"1.21.0\"),","  .package(url: \"https:\/\/github.com\/leif-ibsen\/Digest\", from: \"1.13.0\"),","],"],"type":"codeListing"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"text","text":" "},{"type":"text","text":"SwiftHPKE requires Swift 5.0. It also requires that the "},{"type":"codeVoice","code":"Int"},{"type":"text","text":" and "},{"type":"codeVoice","code":"UInt"},{"type":"text","text":" types be 64 bit types."}]},{"type":"paragraph","inlineContent":[{"text":"SwiftHPKE uses Apple’s CryptoKit framework. Therefore, for macOS the version must be at least 10.15,","type":"text"},{"text":" ","type":"text"},{"text":"for iOS the version must be at least 13, and for watchOS the version must be at least 8.","type":"text"}]}],"style":"important","name":"Important","type":"aside"}],"kind":"content"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","topicSections":[{"title":"Classes","anchor":"Classes","identifiers":["doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/Recipient","doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/Sender"]},{"title":"Structures","anchor":"Structures","identifiers":["doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/CipherSuite","doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/PrivateKey","doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/PublicKey"]},{"title":"Type Aliases","anchor":"Type-Aliases","identifiers":["doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/Byte","doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/Bytes"]},{"title":"Enumerations","anchor":"Enumerations","identifiers":["doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/AEAD","doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/KDF","doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/KEM","doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/HPKEException"]},{"title":"Additional Information","anchor":"Additional-Information","identifiers":["doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/KeyManagement","doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/SecretExport","doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/CryptoKit","doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/Performance","doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/References"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swifthpke"]}],"sections":[],"metadata":{"roleHeading":"Framework","externalID":"SwiftHPKE","role":"collection","symbolKind":"module","title":"SwiftHPKE","modules":[{"name":"SwiftHPKE"}]},"hierarchy":{"paths":[[]]},"references":{"doc://swifthpke.SwiftHPKE/documentation/SwiftHPKE/KEM":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"KEM","kind":"identifier"}],"abstract":[{"text":"The key encapsulation mechanisms","type":"text"}],"role":"symbol","type":"topic","title":"KEM","url":"\/documentation\/swifthpke\/kem","kind":"symbol","identifier":"doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/KEM","navigatorTitle":[{"text":"KEM","kind":"identifier"}]},"doc://swifthpke.SwiftHPKE/documentation/SwiftHPKE/CipherSuite":{"navigatorTitle":[{"text":"CipherSuite","kind":"identifier"}],"abstract":[{"type":"text","text":"The cipher suite"}],"url":"\/documentation\/swifthpke\/ciphersuite","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CipherSuite","kind":"identifier"}],"role":"symbol","type":"topic","title":"CipherSuite","kind":"symbol","identifier":"doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/CipherSuite"},"doc://swifthpke.SwiftHPKE/documentation/SwiftHPKE/AEAD":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AEAD"}],"navigatorTitle":[{"kind":"identifier","text":"AEAD"}],"identifier":"doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/AEAD","kind":"symbol","type":"topic","title":"AEAD","role":"symbol","abstract":[{"type":"text","text":"The AEAD encryption algorithms"}],"url":"\/documentation\/swifthpke\/aead"},"doc://swifthpke.SwiftHPKE/documentation/SwiftHPKE/Recipient":{"role":"symbol","abstract":[{"type":"text","text":"The recipient"}],"type":"topic","title":"Recipient","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Recipient"}],"identifier":"doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/Recipient","url":"\/documentation\/swifthpke\/recipient","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Recipient"}]},"doc://swifthpke.SwiftHPKE/documentation/SwiftHPKE/HPKEException":{"title":"HPKEException","url":"\/documentation\/swifthpke\/hpkeexception","identifier":"doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/HPKEException","kind":"symbol","abstract":[{"text":"The HPKE exceptions","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"HPKEException","kind":"identifier"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"HPKEException"}]},"doc://swifthpke.SwiftHPKE/documentation/SwiftHPKE/Performance":{"identifier":"doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/Performance","title":"Performance","type":"topic","kind":"article","abstract":[{"text":"Encryption and decryption speed","type":"text"}],"url":"\/documentation\/swifthpke\/performance","role":"article"},"doc://swifthpke.SwiftHPKE/documentation/SwiftHPKE/CryptoKit":{"role":"article","url":"\/documentation\/swifthpke\/cryptokit","title":"CryptoKit Compatibility","abstract":[{"text":"SwiftHPKE is compatible with Apple’s CryptoKit framework","type":"text"}],"identifier":"doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/CryptoKit","type":"topic","kind":"article"},"https://leif-ibsen.github.io/BigInt/documentation/bigint":{"url":"https:\/\/leif-ibsen.github.io\/BigInt\/documentation\/bigint","type":"link","identifier":"https:\/\/leif-ibsen.github.io\/BigInt\/documentation\/bigint","title":"BigInt","titleInlineContent":[{"type":"text","text":"BigInt"}]},"doc://swifthpke.SwiftHPKE/documentation/SwiftHPKE/KeyManagement":{"role":"article","url":"\/documentation\/swifthpke\/keymanagement","title":"Key Management","abstract":[{"text":"Creating new keys and loading exsisting keys","type":"text"}],"identifier":"doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/KeyManagement","type":"topic","kind":"article"},"https://leif-ibsen.github.io/ASN1/documentation/asn1":{"url":"https:\/\/leif-ibsen.github.io\/ASN1\/documentation\/asn1","type":"link","identifier":"https:\/\/leif-ibsen.github.io\/ASN1\/documentation\/asn1","title":"ASN1","titleInlineContent":[{"type":"text","text":"ASN1"}]},"https://leif-ibsen.github.io/Digest/documentation/digest":{"url":"https:\/\/leif-ibsen.github.io\/Digest\/documentation\/digest","type":"link","identifier":"https:\/\/leif-ibsen.github.io\/Digest\/documentation\/digest","title":"Digest","titleInlineContent":[{"type":"text","text":"Digest"}]},"doc://swifthpke.SwiftHPKE/documentation/SwiftHPKE":{"kind":"symbol","type":"topic","url":"\/documentation\/swifthpke","identifier":"doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE","abstract":[{"text":"Hybrid Public Key Encryption","type":"text"}],"title":"SwiftHPKE","role":"collection"},"doc://swifthpke.SwiftHPKE/documentation/SwiftHPKE/Bytes":{"role":"symbol","title":"Bytes","identifier":"doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/Bytes","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Bytes","kind":"identifier"}],"url":"\/documentation\/swifthpke\/bytes","navigatorTitle":[{"text":"Bytes","kind":"identifier"}],"type":"topic","kind":"symbol","abstract":[{"text":"Array of unsigned 8 bit values","type":"text"}]},"doc://swifthpke.SwiftHPKE/documentation/SwiftHPKE/KDF":{"navigatorTitle":[{"text":"KDF","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"KDF","kind":"identifier"}],"identifier":"doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/KDF","type":"topic","url":"\/documentation\/swifthpke\/kdf","title":"KDF","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"The key derivation functions"}]},"doc://swifthpke.SwiftHPKE/documentation/SwiftHPKE/PublicKey":{"type":"topic","identifier":"doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/PublicKey","role":"symbol","title":"PublicKey","abstract":[{"type":"text","text":"The public key"}],"url":"\/documentation\/swifthpke\/publickey","navigatorTitle":[{"kind":"identifier","text":"PublicKey"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PublicKey","kind":"identifier"}],"kind":"symbol"},"doc://swifthpke.SwiftHPKE/documentation/SwiftHPKE/Byte":{"abstract":[{"type":"text","text":"Unsigned 8 bit value"}],"type":"topic","identifier":"doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/Byte","kind":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Byte"}],"navigatorTitle":[{"kind":"identifier","text":"Byte"}],"title":"Byte","url":"\/documentation\/swifthpke\/byte","role":"symbol"},"doc://swifthpke.SwiftHPKE/documentation/SwiftHPKE/Sender":{"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Sender"}],"title":"Sender","type":"topic","identifier":"doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/Sender","kind":"symbol","abstract":[{"text":"The sender","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Sender"}],"url":"\/documentation\/swifthpke\/sender"},"doc://swifthpke.SwiftHPKE/documentation/SwiftHPKE/PrivateKey":{"role":"symbol","type":"topic","url":"\/documentation\/swifthpke\/privatekey","navigatorTitle":[{"kind":"identifier","text":"PrivateKey"}],"kind":"symbol","title":"PrivateKey","identifier":"doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/PrivateKey","abstract":[{"type":"text","text":"The private key"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PrivateKey"}]},"doc://swifthpke.SwiftHPKE/documentation/SwiftHPKE/References":{"title":"References","kind":"article","url":"\/documentation\/swifthpke\/references","role":"article","type":"topic","abstract":[{"text":"Algorithms from the following books and papers have been used in the implementation","type":"text"}],"identifier":"doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/References"},"doc://swifthpke.SwiftHPKE/documentation/SwiftHPKE/SecretExport":{"abstract":[{"text":"Creating secret messages","type":"text"}],"title":"Secret Export","identifier":"doc:\/\/swifthpke.SwiftHPKE\/documentation\/SwiftHPKE\/SecretExport","type":"topic","role":"article","url":"\/documentation\/swifthpke\/secretexport","kind":"article"}}}