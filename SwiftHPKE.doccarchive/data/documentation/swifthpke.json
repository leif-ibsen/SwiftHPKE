{"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE"},"hierarchy":{"paths":[[]]},"primaryContentSections":[{"content":[{"text":"Overview","level":2,"type":"heading","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"SwiftHPKE implements the Hybrid Public Key Encryption standard as defined in [RFC 9180]."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The basic concepts in SwiftHPKE are "},{"code":"CipherSuite","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Sender"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Recipient"},{"text":", represented by the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/CipherSuite"},{"text":" structure and the ","type":"text"},{"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Sender","isActive":true,"type":"reference"},{"text":" and ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Recipient","type":"reference"},{"type":"text","text":" classes."}]},{"type":"paragraph","inlineContent":[{"text":"A CipherSuite combines a ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"Key Encapsulation Mechanism"}]},{"type":"text","text":" ("},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/KEM"},{"type":"text","text":"), a "},{"type":"emphasis","inlineContent":[{"text":"Key Derivation Function","type":"text"}]},{"text":" (","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/KDF"},{"type":"text","text":")"},{"type":"text","text":" "},{"text":"and a ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"Authenticated Encryption with Associated Data"}]},{"type":"text","text":" ("},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/AEAD"},{"text":") algorithm.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"There are 5 different KEM’s, 3 different KDF’s and 4 different AEAD’s giving 60 CipherSuite combinations."}]},{"inlineContent":[{"text":"Encryption and decryption takes place in one of four modes:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Base mode","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Preshared key mode","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Authenticated mode"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Authenticated, preshared key mode","type":"text"}],"type":"paragraph"}]}]},{"anchor":"Stateless-Single-shot-API","level":3,"text":"Stateless Single-shot API","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"CipherSuite"},{"type":"text","text":" instance can encrypt (seal) a single plaintext message and decrypt (open) a single"},{"type":"text","text":" "},{"type":"text","text":"ciphertext message without the need for a "},{"code":"Sender","type":"codeVoice"},{"type":"text","text":" instance and a "},{"type":"codeVoice","code":"Recipient"},{"type":"text","text":" instance."}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Example","type":"text"}]}]},{"code":["\/\/ Encryption and decryption of a single message in base mode","","import SwiftHPKE","","\/\/ The CipherSuite to use","let theSuite = CipherSuite(kem: .X448, kdf: .KDF512, aead: .AESGCM256)","","\/\/ The recipient keys","let (recipientPub, recipientPriv) = try theSuite.makeKeyPair()","","let plainText = Bytes(\"Hi, there\".utf8)","let (encapsulatedKey, cipherText) = try theSuite.seal(publicKey: recipientPub, info: [1, 2, 3], pt: plainText, aad: [4, 5, 6])","let decrypted = try theSuite.open(privateKey: recipientPriv, info: [1, 2, 3], ct: cipherText, aad: [4, 5, 6], encap: encapsulatedKey)","print(String(bytes: decrypted, encoding: .utf8)!)"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"giving:"}]},{"syntax":"swift","type":"codeListing","code":["Hi, there"]},{"text":"Stateful Multi-message API","type":"heading","level":3,"anchor":"Stateful-Multi-message-API"},{"inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Sender"},{"type":"text","text":" is based on a specific "},{"code":"CipherSuite","type":"codeVoice"},{"type":"text","text":" and a "},{"code":"Sender","type":"codeVoice"},{"text":" instance can encrypt (seal)","type":"text"},{"text":" ","type":"text"},{"text":"a sequence of plaintexts in one of the four modes shown above.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"code":"Recipient","type":"codeVoice"},{"type":"text","text":" is also based on a specific "},{"type":"codeVoice","code":"CipherSuite"},{"type":"text","text":" and a "},{"type":"codeVoice","code":"Recipient"},{"type":"text","text":" instance can decrypt (open)"},{"type":"text","text":" "},{"type":"text","text":"a sequence of ciphertexts in the four modes."}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Example"}]}]},{"syntax":"swift","type":"codeListing","code":["\/\/ Encryption and decryption of several messages in authenticated mode","","import SwiftHPKE","","\/\/ The CipherSuite to use","let theSuite = CipherSuite(kem: .P384, kdf: .KDF384, aead: .CHACHAPOLY)","","let plainText1 = Bytes(\"Hi, there 1\".utf8)","let plainText2 = Bytes(\"Hi, there 2\".utf8)","let plainText3 = Bytes(\"Hi, there 3\".utf8)","","\/\/ The Sender and Recipient keys","let (senderPub, senderPriv) = try theSuite.makeKeyPair()","let (recipientPub, recipientPriv) = try theSuite.makeKeyPair()","","\/\/ Create the Sender instance","let sender = try Sender(suite: theSuite, publicKey: recipientPub, info: [1, 2, 3], authentication: senderPriv)","","let cipherText1 = try sender.seal(pt: plainText1, aad: [4, 5])","let cipherText2 = try sender.seal(pt: plainText2, aad: [6, 7])","let cipherText3 = try sender.seal(pt: plainText3, aad: [8, 9])","","\/\/ Create the Recipient instance","let recipient = try Recipient(suite: theSuite, privateKey: recipientPriv, info: [1, 2, 3], authentication: senderPub, encap: sender.encapsulatedKey)","","let decrypted1 = try recipient.open(ct: cipherText1, aad: [4, 5])","let decrypted2 = try recipient.open(ct: cipherText2, aad: [6, 7])","let decrypted3 = try recipient.open(ct: cipherText3, aad: [8, 9])","","print(String(bytes: decrypted1, encoding: .utf8)!)","print(String(bytes: decrypted2, encoding: .utf8)!)","print(String(bytes: decrypted3, encoding: .utf8)!)"]},{"inlineContent":[{"type":"text","text":"giving:"}],"type":"paragraph"},{"syntax":"swift","code":["Hi, there 1","Hi, there 2","Hi, there 3"],"type":"codeListing"},{"content":[{"inlineContent":[{"type":"text","text":""},{"type":"text","text":" "},{"text":"The messages must be decrypted in the order in which they were encrypted.","type":"text"}],"type":"paragraph"}],"name":"Important","type":"aside","style":"important"},{"type":"heading","text":"Usage","anchor":"Usage","level":3},{"inlineContent":[{"text":"To use SwiftHPKE, in your project ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"Package.swift"}]},{"type":"text","text":" file add a dependency like"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["dependencies: [","  .package(url: \"https:\/\/github.com\/leif-ibsen\/SwiftHPKE\", from: \"2.5.0\"),","]"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"SwiftHPKE itself depends on the ASN1, BigInt and Digest packages"}]},{"type":"codeListing","syntax":"swift","code":["dependencies: [","  .package(url: \"https:\/\/github.com\/leif-ibsen\/ASN1\", from: \"2.5.0\"),","  .package(url: \"https:\/\/github.com\/leif-ibsen\/BigInt\", from: \"1.17.0\"),","  .package(url: \"https:\/\/github.com\/leif-ibsen\/Digest\", from: \"1.6.0\"),","],"]},{"name":"Important","type":"aside","style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"text","text":" "},{"type":"text","text":"SwiftHPKE requires Swift 5.0. It also requires that the "},{"code":"Int","type":"codeVoice"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"UInt"},{"type":"text","text":" types be 64 bit types."}]},{"type":"paragraph","inlineContent":[{"text":"SwiftHPKE uses Apple’s CryptoKit framework. Therefore, for macOS the version must be at least 10.15,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"for iOS the version must be at least 13, and for watchOS the version must be at least 8."}]}]}],"kind":"content"}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swifthpke"]}],"metadata":{"title":"SwiftHPKE","roleHeading":"Framework","symbolKind":"module","role":"collection","modules":[{"name":"SwiftHPKE"}],"externalID":"SwiftHPKE"},"abstract":[{"text":"Hybrid Public Key Encryption","type":"text"}],"topicSections":[{"identifiers":["doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Recipient","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Sender"],"title":"Classes"},{"title":"Structures","identifiers":["doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/CipherSuite","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/PrivateKey","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/PublicKey","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Base64"]},{"title":"Type Aliases","identifiers":["doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Byte","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Bytes"]},{"title":"Enumerations","identifiers":["doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/AEAD","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/KDF","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/KEM","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/HPKEException"]},{"title":"Additional Information","identifiers":["doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/KeyManagement","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/SecretExport","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/CryptoKit","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Performance","doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/References"]}],"sections":[],"references":{"doc://SwiftHPKE/documentation/SwiftHPKE/Performance":{"type":"topic","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Performance","title":"Performance","url":"\/documentation\/swifthpke\/performance","kind":"article","abstract":[{"type":"text","text":"Encryption and decryption speed"}],"role":"article"},"doc://SwiftHPKE/documentation/SwiftHPKE/HPKEException":{"url":"\/documentation\/swifthpke\/hpkeexception","title":"HPKEException","role":"symbol","type":"topic","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/HPKEException","abstract":[{"type":"text","text":"The HPKE exceptions"}],"navigatorTitle":[{"kind":"identifier","text":"HPKEException"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HPKEException","kind":"identifier"}],"kind":"symbol"},"doc://SwiftHPKE/documentation/SwiftHPKE/Base64":{"type":"topic","title":"Base64","url":"\/documentation\/swifthpke\/base64","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Base64","kind":"identifier"}],"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Base64","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"The Base64 structure"}],"navigatorTitle":[{"text":"Base64","kind":"identifier"}]},"doc://SwiftHPKE/documentation/SwiftHPKE":{"role":"collection","title":"SwiftHPKE","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE","abstract":[{"type":"text","text":"Hybrid Public Key Encryption"}],"url":"\/documentation\/swifthpke","type":"topic","kind":"symbol"},"doc://SwiftHPKE/documentation/SwiftHPKE/KeyManagement":{"role":"article","title":"Key Management","url":"\/documentation\/swifthpke\/keymanagement","type":"topic","kind":"article","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/KeyManagement","abstract":[{"text":"Creating new keys and loading exsisting keys","type":"text"}]},"doc://SwiftHPKE/documentation/SwiftHPKE/PublicKey":{"type":"topic","title":"PublicKey","url":"\/documentation\/swifthpke\/publickey","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PublicKey"}],"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/PublicKey","role":"symbol","kind":"symbol","abstract":[{"text":"The public key","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"PublicKey"}]},"doc://SwiftHPKE/documentation/SwiftHPKE/SecretExport":{"role":"article","title":"Secret Export","url":"\/documentation\/swifthpke\/secretexport","type":"topic","kind":"article","abstract":[{"text":"Creating secret messages","type":"text"}],"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/SecretExport"},"doc://SwiftHPKE/documentation/SwiftHPKE/AEAD":{"abstract":[{"type":"text","text":"The AEAD encryption algorithms"}],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"AEAD","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/AEAD","title":"AEAD","url":"\/documentation\/swifthpke\/aead","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"AEAD","kind":"identifier"}]},"doc://SwiftHPKE/documentation/SwiftHPKE/KDF":{"kind":"symbol","url":"\/documentation\/swifthpke\/kdf","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/KDF","navigatorTitle":[{"text":"KDF","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"The key derivation functions"}],"role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"KDF","kind":"identifier"}],"title":"KDF"},"doc://SwiftHPKE/documentation/SwiftHPKE/CryptoKit":{"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/CryptoKit","kind":"article","role":"article","abstract":[{"text":"SwiftHPKE is compatible with Apple’s CryptoKit framework","type":"text"}],"url":"\/documentation\/swifthpke\/cryptokit","type":"topic","title":"CryptoKit Compatibility"},"doc://SwiftHPKE/documentation/SwiftHPKE/PrivateKey":{"kind":"symbol","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/PrivateKey","abstract":[{"type":"text","text":"The private key"}],"navigatorTitle":[{"text":"PrivateKey","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PrivateKey"}],"title":"PrivateKey","url":"\/documentation\/swifthpke\/privatekey","type":"topic","role":"symbol"},"doc://SwiftHPKE/documentation/SwiftHPKE/Byte":{"navigatorTitle":[{"text":"Byte","kind":"identifier"}],"role":"symbol","abstract":[{"text":"Unsigned 8 bit value","type":"text"}],"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Byte","type":"topic","kind":"symbol","title":"Byte","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"Byte","kind":"identifier"}],"url":"\/documentation\/swifthpke\/byte"},"doc://SwiftHPKE/documentation/SwiftHPKE/Sender":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Sender","kind":"identifier"}],"title":"Sender","url":"\/documentation\/swifthpke\/sender","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Sender","role":"symbol","type":"topic","abstract":[{"text":"The sender","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Sender"}]},"doc://SwiftHPKE/documentation/SwiftHPKE/CipherSuite":{"abstract":[{"type":"text","text":"The cipher suite"}],"url":"\/documentation\/swifthpke\/ciphersuite","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CipherSuite"}],"type":"topic","title":"CipherSuite","role":"symbol","kind":"symbol","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/CipherSuite","navigatorTitle":[{"text":"CipherSuite","kind":"identifier"}]},"doc://SwiftHPKE/documentation/SwiftHPKE/KEM":{"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/KEM","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"KEM"}],"abstract":[{"type":"text","text":"The key encapsulation mechanisms"}],"navigatorTitle":[{"kind":"identifier","text":"KEM"}],"url":"\/documentation\/swifthpke\/kem","kind":"symbol","title":"KEM","type":"topic","role":"symbol"},"doc://SwiftHPKE/documentation/SwiftHPKE/Bytes":{"navigatorTitle":[{"text":"Bytes","kind":"identifier"}],"role":"symbol","abstract":[{"text":"Array of unsigned 8 bit values","type":"text"}],"identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Bytes","type":"topic","kind":"symbol","title":"Bytes","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"Bytes","kind":"identifier"}],"url":"\/documentation\/swifthpke\/bytes"},"doc://SwiftHPKE/documentation/SwiftHPKE/Recipient":{"role":"symbol","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/Recipient","abstract":[{"type":"text","text":"The recipient"}],"navigatorTitle":[{"text":"Recipient","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/swifthpke\/recipient","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"Recipient","kind":"identifier"}],"title":"Recipient"},"doc://SwiftHPKE/documentation/SwiftHPKE/References":{"role":"article","title":"References","url":"\/documentation\/swifthpke\/references","type":"topic","abstract":[{"text":"Algorithms from the following books and papers have been used in the implementation","type":"text"}],"kind":"article","identifier":"doc:\/\/SwiftHPKE\/documentation\/SwiftHPKE\/References"}}}